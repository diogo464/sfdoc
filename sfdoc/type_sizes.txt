print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `tables::Align64<[u8; 7264]>`: 7296 bytes, alignment: 64 bytes
print-type-size     field `.0`: 7264 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `tables::Align8<[u8; 1793]>`: 1800 bytes, alignment: 8 bytes
print-type-size     field `.0`: 1793 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size type: `tables::Align8<[u8; 394]>`: 400 bytes, alignment: 8 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size     field `.0`: 394 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size     discriminant: 1 bytes
print-type-size type: `tables::Align64<[bool; 128]>`: 128 bytes, alignment: 64 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     field `.0`: 128 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size type: `core::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size     field `.file`: 16 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.col`: 4 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@<usize as core::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::str::iter::SplitInternal<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::str::iter::SplitInternal<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     discriminant: 8 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size     discriminant: 8 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size     field `.value`: 32 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     field `.value`: 32 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.value`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size     discriminant: 8 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `core::str::iter::SplitInternal<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size         field `.value`: 24 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ffi::OsString>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size     field `.1`: 0 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size     field `.0`: 16 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size     field `.value`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size     field `.len`: 8 bytes
print-type-size         padding: 7 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size     field `.len`: 8 bytes
print-type-size         padding: 7 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size         padding: 3 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size     discriminant: 8 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size     field `.value`: 16 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.value`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     field `.file`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size     discriminant: 8 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ffi::OsString>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     end padding: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ffi::OsString>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `Compiler`: 8 bytes, alignment: 4 bytes
print-type-size     field `.minor`: 4 bytes
print-type-size     field `.nightly`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@core::slice::memchr::memchr::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size         padding: 7 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size     end padding: 6 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::str::iter::SplitInternal<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 6 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size type: `std::str::Split<char>`: 72 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.0`: 72 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size     field `.front`: 32 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size         field `.0`: 0 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 6 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@core::slice::memchr::memchr::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     end padding: 8 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size     field `.0`: 8 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     end padding: 24 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     end padding: 24 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     end padding: 6 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size type: `[closure@core::slice::memchr::memchr::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     end padding: 8 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     end padding: 8 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     end padding: 8 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.value`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<Compiler>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size     field `.error`: 16 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 7 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.value`: 24 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     discriminant: 4 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.col`: 4 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::option::Option<RustcVersion>`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ffi::OsString>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     end padding: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     discriminant: 1 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size         padding: 3 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::os::unix::io::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size     discriminant: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::os::unix::io::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `RustcVersion`: 4 bytes, alignment: 4 bytes
print-type-size     field `.minor`: 4 bytes
print-type-size type: `std::os::unix::io::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size         padding: 7 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     field `.value`: 16 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size     field `.value`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size type: `[closure@<std::str::Chars as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size         field `.value`: 16 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 0 bytes
print-type-size     discriminant: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@core::slice::memchr::memchr::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::os::unix::io::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `core::str::iter::SplitInternal<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ffi::OsString>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `RustcVersion`: 8 bytes, alignment: 4 bytes
print-type-size     field `.minor`: 4 bytes
print-type-size     field `.nightly`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/build.rs:174:40: 174:49]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::slice::memchr::memchr::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&str, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/build.rs:174:40: 174:49]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<RustcVersion>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::unix::io::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `Record`: 128 bytes, alignment: 8 bytes
print-type-size     field `.metadata`: 24 bytes
print-type-size     field `.args`: 48 bytes
print-type-size     field `.module_path`: 24 bytes
print-type-size     field `.file`: 24 bytes
print-type-size     field `.line`: 8 bytes
print-type-size type: `RecordBuilder`: 128 bytes, alignment: 8 bytes
print-type-size     field `.record`: 128 bytes
print-type-size type: `core::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `core::iter::Zip<core::str::Bytes, core::str::Bytes>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `MaybeStaticStr`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Static`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `Metadata`: 24 bytes, alignment: 8 bytes
print-type-size     field `.level`: 8 bytes
print-type-size     field `.target`: 16 bytes
print-type-size type: `MetadataBuilder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.metadata`: 24 bytes
print-type-size type: `core::option::Option<MaybeStaticStr>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::iter::Copied<core::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `core::iter::Filter<core::option::IntoIter<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:567:25: 567:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Map<core::iter::Filter<core::option::IntoIter<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:567:25: 567:31]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:568:22: 568:27]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Map<core::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:627:20: 627:23]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Map<core::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:808:20: 808:23]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::mem::ManuallyDrop<core::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::mem::MaybeUninit<core::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<usize, core::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::IntoIter<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `core::option::Item<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 16 bytes
print-type-size type: `core::option::Option<&[(&str, &str)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `Level`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `LevelFilter`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Off`: 0 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:1466:22: 1466:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:565:27: 565:34]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:746:27: 746:34]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::iter::Iterator::find::check<usize, &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:567:25: 567:31]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::ops::ControlFlow<usize, core::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<Level>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<LevelFilter>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<Level, ParseLevelError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<LevelFilter, ParseLevelError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `core::option::Option<(u8, u8)>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<(), SetLoggerError>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `NopLogger`: 0 bytes, alignment: 1 bytes
print-type-size type: `ParseLevelError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `SetLoggerError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:553:18: 553:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:567:25: 567:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:568:22: 568:27]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:627:20: 627:23]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:747:22: 747:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:808:20: 808:23]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:935:30: 935:33]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:950:23: 950:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs:553:18: 553:26]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::ops::ControlFlow<(), core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<(parse::Cursor, TokenTree), parse::Reject>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor, Ident), parse::Reject>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `TokenTree`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ident`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, LexError>, imp::TokenStream>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<TokenStream, LexError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<imp::TokenStream, LexError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<imp::TokenStream, imp::LexError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size type: `Ident`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `imp::Ident`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::iter::Peekable<std::str::CharIndices>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<imp::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::vec::Vec<TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<Literal, LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<Literal, imp::LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<imp::Literal, imp::LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/fallback.rs:946:34: 946:44]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size type: `std::vec::Drain<proc_macro::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `rcvec::RcVecIntoIter<TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<TokenTree>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<proc_macro::TokenTree>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(Delimiter, fallback::TokenStreamBuilder)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<(Delimiter, fallback::TokenStreamBuilder)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(Delimiter, fallback::TokenStreamBuilder)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor, &str), parse::Reject>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor, Punct), parse::Reject>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::vec::IntoIter<TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<u8>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `fallback::SourceFile`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 24 bytes
print-type-size type: `fallback::TokenStreamBuilder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `proc_macro::TokenTree`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `rcvec::RcVecBuilder<TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::char::EscapeDebug`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::char::EscapeDefault`: 24 bytes, alignment: 8 bytes
print-type-size     field `.state`: 24 bytes
print-type-size type: `std::char::EscapeDefaultState`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Unicode`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Backslash`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<proc_macro::TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Bytes>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Peekable<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::TokenTree>`: 24 bytes, alignment: 4 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 4 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::TokenTree>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::vec::Vec<TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro::TokenTree>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, fallback::LexError>, fallback::Literal>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::TokenTree>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<(parse::Cursor, char), parse::Reject>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(usize, u8), parse::Reject>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<fallback::Literal, fallback::LexError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::result::Result<proc_macro::TokenStream, imp::LexError>, std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(Delimiter, fallback::TokenStreamBuilder)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::result::Result<proc_macro::Literal, imp::LexError>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 19 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<TokenTree, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro::TokenTree, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::intrinsics::copy<proc_macro::TokenTree>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::intrinsics::copy<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const TokenTree>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const proc_macro::TokenTree>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(Delimiter, fallback::TokenStreamBuilder)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<TokenTree>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<proc_macro::TokenTree>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<proc_macro::TokenTree>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<TokenTree>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<proc_macro::TokenTree>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(Delimiter, fallback::TokenStreamBuilder)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `fallback::LineColumn`: 16 bytes, alignment: 8 bytes
print-type-size     field `.line`: 8 bytes
print-type-size     field `.column`: 8 bytes
print-type-size type: `parse::Cursor`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rest`: 16 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::char::EscapeUnicode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hex_digit_idx`: 8 bytes
print-type-size     field `.c`: 4 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::collections::Bound<&usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Included`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Excluded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::iter::Copied<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::option::Option<(usize, char)>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::slice::Iter<proc_macro::TokenTree>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::option::Option<(usize, char)>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::slice::Iter<proc_macro::TokenTree>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, parse::Cursor>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &TokenTree)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &proc_macro::TokenTree)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<(usize, char)>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::r#try::Data<[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/wrapper.rs:118:38: 118:40], std::result::Result<proc_macro::TokenStream, imp::LexError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.r`: 8 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(Delimiter, fallback::TokenStreamBuilder)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<TokenTree>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<proc_macro::TokenTree>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(Delimiter, fallback::TokenStreamBuilder)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<TokenTree>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<proc_macro::TokenTree>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor, ()), parse::Reject>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(usize, char), parse::Reject>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<parse::Cursor, parse::Reject>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro::Literal, proc_macro::LexError>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sync::OnceState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.set_state_on_drop_to`: 8 bytes
print-type-size     field `.poisoned`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `<std::vec::Drain<'_, T, A> as std::ops::Drop>::drop::DropGuard<proc_macro::TokenTree, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<TokenTree, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/parse.rs:267:14: 267:22]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/wrapper.rs:118:38: 118:40]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::vec::Drain<proc_macro::TokenTree>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::string::String as std::iter::Extend<char>>::extend<std::char::EscapeDebug>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::slice::memchr::memchr::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<TokenTree>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<u8>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<char, [closure@<std::string::String as std::iter::Extend<char>>::extend<std::char::EscapeDebug>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::vec::Drain<proc_macro::TokenTree>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::str::CharIndices>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::str::Chars>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sync::Once::call_once<fn() {detection::initialize}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `rcvec::RcVec<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `rcvec::RcVecMut<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::rc::RcBox<std::vec::Vec<TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<*mut ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/wrapper.rs:118:38: 118:40]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<rcvec::RcVec<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::rc::RcBox<std::vec::Vec<TokenTree>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::result::Result<proc_macro::TokenStream, imp::LexError>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/wrapper.rs:118:38: 118:40]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<rcvec::RcVec<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::Vec<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, fallback::LexError>, fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, imp::LexError>, proc_macro::TokenStream>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(Delimiter, fallback::TokenStreamBuilder)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(usize, char)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<(usize, char)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<char>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::fmt::Arguments>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<imp::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<rcvec::RcVecMut<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(Delimiter, fallback::TokenStreamBuilder)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::vec::Vec<TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<proc_macro::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(Delimiter, fallback::TokenStreamBuilder)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::rc::RcBox<std::vec::Vec<TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<fallback::TokenStream, fallback::LexError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro::TokenStream, imp::LexError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<proc_macro::TokenStream, proc_macro::LexError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::Once`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.state_and_queue`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::option::Option<char>>>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::option::Option<char>>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<char>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::char::methods::EscapeDebugExtArgs`: 3 bytes, alignment: 1 bytes
print-type-size     field `.escape_grapheme_extended`: 1 bytes
print-type-size     field `.escape_single_quote`: 1 bytes
print-type-size     field `.escape_double_quote`: 1 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `std::char::EscapeUnicodeState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size     variant `RightBrace`: 0 bytes
print-type-size     variant `Value`: 0 bytes
print-type-size     variant `LeftBrace`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Backslash`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<fn() {detection::initialize}>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<fn() {detection::initialize}>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, fallback::Span>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<Delimiter>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fallback::Span>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<fn() {detection::initialize}>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, imp::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/fallback.rs:711:27: 711:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/fallback.rs:946:34: 946:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/lib.rs:1251:49: 1251:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/lib.rs:215:37: 215:40]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/parse.rs:383:70: 383:79]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/parse.rs:438:70: 438:79]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/parse.rs:493:37: 493:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/parse.rs:494:47: 494:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/parse.rs:516:37: 516:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/parse.rs:517:46: 517:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/parse.rs:624:36: 624:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/wrapper.rs:119:27: 119:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::vec::Drain<proc_macro::TokenTree> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::find<char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<u8, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/fallback.rs:711:27: 711:34]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::copied::copy_try_fold<u8, (), std::ops::ControlFlow<()>, [closure@std::iter::Iterator::all::check<u8, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/fallback.rs:711:27: 711:34]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::slice::range<std::ops::RangeFull>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::slice::range<std::ops::RangeFull>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `parse::Reject`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(Delimiter, fallback::TokenStreamBuilder)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const std::sync::once::Waiter>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::vec::Vec<TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, fallback::LexError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, parse::Reject>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.43/src/fallback.rs:946:34: 946:44]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 104 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `proc_macro2::TokenTree`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ident`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:189:37: 189:40]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<proc_macro2::TokenTree>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<proc_macro2::TokenTree>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 48 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `proc_macro2::Ident`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::imp::Ident`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/spanned.rs:22:43: 22:47]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<proc_macro2::TokenStream>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<proc_macro2::TokenStream>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 40 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::imp::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::mem::MaybeUninit<std::vec::Vec<proc_macro2::TokenTree>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::option::Option<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<std::vec::Vec<proc_macro2::TokenTree>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `__private::push_lifetime::Lifetime`: 24 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `__private::push_lifetime_spanned::Lifetime`: 24 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro::ConcatStreamsHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.streams`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `proc_macro::TokenTree`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<proc_macro2::TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::vec::Vec<proc_macro2::TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::client::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:189:37: 189:40], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:189:37: 189:40]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29], [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::client::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, std::alloc::Layout>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro::bridge::client::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro::bridge::client::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::RcBox<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<*mut std::rc::RcBox<std::mem::MaybeUninit<std::vec::Vec<proc_macro2::TokenTree>>>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:189:37: 189:40]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/spanned.rs:41:19: 41:25]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<__private::push_lifetime::Lifetime>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<__private::push_lifetime_spanned::Lifetime>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:189:37: 189:40]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Once<proc_macro2::TokenTree>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<__private::push_lifetime::Lifetime>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<__private::push_lifetime_spanned::Lifetime>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:189:37: 189:40]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Once<proc_macro2::TokenTree>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}], [closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/runtime.rs:199:22: 199:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rc::Rc<std::mem::MaybeUninit<std::vec::Vec<proc_macro2::TokenTree>>>::allocate_for_layout<[closure@std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>::new_uninit::{closure#0}], [closure@std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>::new_uninit::{closure#1}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecMut<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::rc::Rc<std::mem::MaybeUninit<std::vec::Vec<proc_macro2::TokenTree>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&mut proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::client::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::mem::MaybeUninit<std::vec::Vec<proc_macro2::TokenTree>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::client::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<std::mem::MaybeUninit<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/spanned.rs:22:43: 22:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/spanned.rs:40:21: 40:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::Span, std::option::Option<proc_macro2::Span>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/spanned.rs:22:43: 22:47], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.21/src/spanned.rs:40:21: 40:34]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>::new_uninit::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>::new_uninit::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::client::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::mem::MaybeUninit<std::vec::Vec<proc_macro2::TokenTree>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::GenericParam, token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.value`: 392 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::WherePredicate, token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.value`: 392 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::GenericParam, token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 392 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 392 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::WherePredicate, token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 392 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 392 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::WherePredicate>`: 392 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::GenericParam, error::Error>`: 392 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::WherePredicate, error::Error>`: 392 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `generics::GenericParam`: 384 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Type`: 296 bytes
print-type-size         field `.0`: 296 bytes
print-type-size     variant `Lifetime`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size type: `generics::WherePredicate`: 384 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Eq`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Type`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Lifetime`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::GenericParam>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::WherePredicate>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<generics::GenericParam>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<generics::WherePredicate>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::ConstParam>`: 384 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::ConstParam, error::Error>`: 384 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `generics::ConstParam`: 376 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.ty`: 184 bytes
print-type-size     field `.default`: 112 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `generics::PredicateEq`: 376 bytes, alignment: 8 bytes
print-type-size     field `.lhs_ty`: 184 bytes
print-type-size     field `.rhs_ty`: 184 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TypeParam>`: 304 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 296 bytes
print-type-size         field `.0`: 296 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::TypeParam, error::Error>`: 304 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 296 bytes
print-type-size         field `.0`: 296 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `generics::TypeParam`: 296 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.default`: 184 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(data::Field, token::Comma)>`: 296 bytes, alignment: 8 bytes
print-type-size     field `.value`: 296 bytes
print-type-size type: `std::mem::MaybeUninit<(data::Field, token::Comma)>`: 296 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 296 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 296 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::Field>`: 296 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(data::Field, token::Comma)>`: 296 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 296 bytes
print-type-size         field `.0`: 296 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<data::Field, error::Error>`: 296 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `data::Field`: 288 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.ty`: 184 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(data::Field, ())>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::ManuallyDrop<data::Field>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<data::Field>>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<(data::Field, ())>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<data::Field>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<data::Field>>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `std::option::IntoIter<data::Field>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 288 bytes
print-type-size type: `std::option::Item<data::Field>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 288 bytes
print-type-size type: `std::option::Option<(data::Field, ())>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<data::Field>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `generics::PredicateType`: 272 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.bounded_ty`: 184 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<(ty::BareFnArg, token::Comma)>`: 264 bytes, alignment: 8 bytes
print-type-size     field `.value`: 264 bytes
print-type-size type: `std::mem::MaybeUninit<(ty::BareFnArg, token::Comma)>`: 264 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 264 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 264 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<ty::BareFnArg>>`: 264 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<derive::DeriveInput, error::Error>`: 264 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<ty::BareFnArg>, error::Error>`: 264 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::BareFnArg, error::Error>`: 264 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `derive::DeriveInput`: 256 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.data`: 72 bytes
print-type-size type: `std::mem::ManuallyDrop<ty::BareFnArg>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.value`: 256 bytes
print-type-size type: `std::mem::MaybeUninit<ty::BareFnArg>`: 256 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 256 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 256 bytes
print-type-size type: `std::option::Option<ty::BareFnArg>`: 256 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ty::BareFnArg`: 256 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.name`: 48 bytes
print-type-size     field `.ty`: 184 bytes
print-type-size type: `std::mem::ManuallyDrop<(path::GenericArgument, token::Comma)>`: 248 bytes, alignment: 8 bytes
print-type-size     field `.value`: 248 bytes
print-type-size type: `std::mem::MaybeUninit<(path::GenericArgument, token::Comma)>`: 248 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 248 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 248 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::GenericArgument>`: 248 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::GenericArgument, error::Error>`: 248 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `path::GenericArgument`: 240 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Binding`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Type`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Const`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Constraint`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Lifetime`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<(data::Variant, token::Comma)>`: 240 bytes, alignment: 8 bytes
print-type-size     field `.value`: 240 bytes
print-type-size type: `std::mem::ManuallyDrop<path::GenericArgument>`: 240 bytes, alignment: 8 bytes
print-type-size     field `.value`: 240 bytes
print-type-size type: `std::mem::MaybeUninit<(data::Variant, token::Comma)>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 240 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 240 bytes
print-type-size type: `std::mem::MaybeUninit<path::GenericArgument>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 240 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 240 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::Variant>`: 240 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<data::Variant, error::Error>`: 240 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::Binding, error::Error>`: 240 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `data::Variant`: 232 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.discriminant`: 120 bytes
print-type-size type: `path::Binding`: 232 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.ty`: 184 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<data::Variant>`: 232 bytes, alignment: 8 bytes
print-type-size     field `.value`: 232 bytes
print-type-size type: `std::mem::MaybeUninit<data::Variant>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 232 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 232 bytes
print-type-size type: `std::mem::ManuallyDrop<(ty::Type, token::Comma)>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.value`: 192 bytes
print-type-size type: `std::mem::MaybeUninit<(ty::Type, token::Comma)>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 192 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 192 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::Type>`: 192 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::Type, error::Error>`: 192 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<ty::Type>`: 184 bytes, alignment: 8 bytes
print-type-size     field `.value`: 184 bytes
print-type-size type: `std::mem::MaybeUninit<ty::Type>`: 184 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 184 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 184 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<ty::TypeBareFn>>`: 184 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<ty::Type>`: 184 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<ty::TypeBareFn>, error::Error>`: 184 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeBareFn, error::Error>`: 184 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ty::Type`: 184 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `BareFn`: 180 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 132 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 108 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 84 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 76 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Never`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<ty::TypeBareFn>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ty::TypeBareFn`: 176 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.variadic`: 40 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `punctuated::IntoPairs<path::PathSegment, token::Colon2>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `.last`: 104 bytes
print-type-size type: `std::result::Result<ty::TypeArray, error::Error>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::TypeParamBound, token::Add)>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.value`: 128 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::TypeParamBound, token::Add)>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 128 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 128 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TypeParamBound>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(generics::TypeParamBound, token::Add)>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<generics::TypeParamBound, error::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ty::TypeArray`: 128 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.len`: 112 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `generics::TypeParamBound`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trait`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Lifetime`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `punctuated::Pair<path::PathSegment, token::Colon2>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Punctuated`: 116 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `End`: 108 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(attr::NestedMeta, token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::ManuallyDrop<(expr::Expr, token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::LifetimeDef, token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<generics::TypeParamBound>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<(attr::NestedMeta, token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<(expr::Expr, token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::LifetimeDef, token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<generics::TypeParamBound>>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, attr::NestedMeta>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Expr>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::LifetimeDef>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TraitBound>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::IntoIter<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 120 bytes
print-type-size type: `std::option::Item<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 120 bytes
print-type-size type: `std::option::Option<(token::Eq, expr::Expr)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<path::PathSegment, token::Colon2>>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<attr::NestedMeta, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::Expr, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::LifetimeDef, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::TraitBound, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `attr::NestedMeta`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Meta`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Lit`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `expr::Expr`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Field`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Call`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Lit`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Binary`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Cast`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Index`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Paren`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unary`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `AssignOp`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Async`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Await`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Block`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Box`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Closure`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `ForLoop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Group`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `If`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Let`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Loop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Macro`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `MethodCall`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Reference`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Repeat`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Try`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `TryBlock`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Unsafe`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `While`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Yield`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `generics::LifetimeDef`: 112 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lifetime`: 48 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `generics::TraitBound`: 112 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.paren_token`: 8 bytes
print-type-size     field `.modifier`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(path::PathSegment, token::Colon2)>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::mem::ManuallyDrop<attr::NestedMeta>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::mem::ManuallyDrop<expr::Expr>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::LifetimeDef>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::mem::MaybeUninit<(path::PathSegment, token::Colon2)>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 112 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 112 bytes
print-type-size type: `std::mem::MaybeUninit<attr::NestedMeta>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 112 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 112 bytes
print-type-size type: `std::mem::MaybeUninit<expr::Expr>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 112 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 112 bytes
print-type-size type: `std::mem::MaybeUninit<generics::LifetimeDef>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 112 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 112 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, attr::Attribute>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, attr::Meta>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, mac::Macro>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::PathSegment>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(path::PathSegment, token::Colon2)>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<expr::Expr>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<attr::Attribute, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<attr::Meta, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprPath, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<mac::Macro, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::PathSegment, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeMacro, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `attr::Attribute`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size type: `attr::Meta`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NameValue`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `List`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Path`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `expr::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `mac::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     field `.delimiter`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::PathSegment`: 104 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size type: `std::mem::ManuallyDrop<attr::Attribute>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::ManuallyDrop<path::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<path::PathSegment>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<attr::Attribute>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<path::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<path::PathSegment>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, data::Fields, std::option::Option<token::Semi>)>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::IntoIter<path::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 104 bytes
print-type-size type: `std::option::Item<path::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 104 bytes
print-type-size type: `std::option::Option<path::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, data::Fields, std::option::Option<token::Semi>), error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<attr::MetaNameValue, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ty::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `attr::MetaNameValue`: 96 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.lit`: 40 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::Generics>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<attr::MetaList, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::Generics, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `attr::MetaList`: 88 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.nested`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprField`: 88 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.member`: 48 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `generics::PredicateLifetime`: 88 bytes, alignment: 8 bytes
print-type-size     field `.lifetime`: 48 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, data::FieldsNamed)>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, token::Brace, punctuated::Punctuated<data::Variant, token::Comma>)>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<path::QSelf>, path::Path)>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypePath>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, data::FieldsNamed), error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, token::Brace, punctuated::Punctuated<data::Variant, token::Comma>), error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(std::option::Option<path::QSelf>, path::Path), error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypePath, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `path::Constraint`: 80 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::result::Result<ty::TypeReference, error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ty::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `core::str::iter::SplitInternal<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `derive::Data`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Struct`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Union`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Enum`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `expr::ExprCall`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.a`: 32 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((mac::MacroDelimiter, proc_macro2::TokenStream), buffer::Cursor)>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (lifetime::Lifetime, buffer::Cursor)>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::TokenTree, buffer::Cursor)>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprLit>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<((mac::MacroDelimiter, proc_macro2::TokenStream), buffer::Cursor), error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(lifetime::Lifetime, buffer::Cursor), error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::TokenTree, buffer::Cursor), error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprLit, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::Split<char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `ty::TypeReference`: 72 bytes, alignment: 8 bytes
print-type-size     field `.lifetime`: 48 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `derive::DataStruct`: 64 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprLit`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lit`: 40 bytes
print-type-size type: `lit::LitFloatRepr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `lit::LitIntRepr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `path::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `AngleBracketed`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Parenthesized`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitFloatRepr>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitIntRepr>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitFloatRepr>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitIntRepr>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((proc_macro2::Span, parse::ParseBuffer), buffer::Cursor)>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (lit::Lit, buffer::Cursor)>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Ident, buffer::Cursor)>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::TokenStream, buffer::Cursor)>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::AngleBracketedGenericArguments>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::ParenthesizedGenericArguments>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(lifetime::Lifetime, buffer::Cursor)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenTree, buffer::Cursor)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<((proc_macro2::Span, parse::ParseBuffer), buffer::Cursor), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(lit::Lit, buffer::Cursor), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Ident, buffer::Cursor), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::TokenStream, buffer::Cursor), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::AngleBracketedGenericArguments, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::ParenthesizedGenericArguments, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `error::ErrorMessage`: 56 bytes, alignment: 8 bytes
print-type-size     field `.start_span`: 16 bytes
print-type-size     field `.end_span`: 16 bytes
print-type-size     field `.message`: 24 bytes
print-type-size type: `expr::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size type: `lookahead::Lookahead1`: 56 bytes, alignment: 8 bytes
print-type-size     field `.cursor`: 16 bytes
print-type-size     field `.comparisons`: 32 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::ParenthesizedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::iter::Zip<std::str::Chars, std::slice::Iter<proc_macro2::Span>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(lifetime::Lifetime, token::Add)>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::ManuallyDrop<error::ErrorMessage>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<(lifetime::Lifetime, token::Add)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<error::ErrorMessage>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, error::ErrorMessage>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (mac::MacroDelimiter, proc_macro2::TokenStream)>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Literal, buffer::Cursor)>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Member>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lifetime::Lifetime>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::Path>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<generics::BoundLifetimes>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lifetime::Lifetime>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(lit::Lit, buffer::Cursor)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, buffer::Cursor)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenTree, &proc_macro2::Span)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::As, path::Path)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<error::ErrorMessage>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(mac::MacroDelimiter, proc_macro2::TokenStream), error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Literal, buffer::Cursor), error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::Member, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::BoundLifetimes, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<lifetime::Lifetime, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::Path, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenTree, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<generics::BoundLifetimes>, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<lifetime::Lifetime>, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/attr.rs:193:22: 193:42]`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `alloc::sync::ArcInner<std::thread::Inner>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `buffer::Cursor<'a>::empty::UnsafeSyncEntry`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `buffer::Entry`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Ident`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `End`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `data::Fields`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unnamed`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `derive::DataUnion`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 40 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprIndex`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::Member`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Named`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `generics::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `lifetime::Lifetime`: 48 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `lit::LitRepr`: 48 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `path::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::TokenTree`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ident`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<buffer::Entry>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<lifetime::Lifetime>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitRepr>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<path::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<buffer::Entry>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<lifetime::Lifetime>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitRepr>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<path::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, (proc_macro2::Literal, buffer::Cursor)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Group, buffer::Cursor)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::FieldsNamed>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::FieldsUnnamed>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::WhereClause>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, group::Group>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::Lit>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::Ident>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::TokenStream>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<generics::WhereClause>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypeTraitObject>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, proc_macro2::LexError>, proc_macro2::TokenStream>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 48 bytes
print-type-size type: `std::option::Option<(buffer::Cursor, proc_macro2::Span, buffer::Cursor)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, token::Colon)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Literal, buffer::Cursor)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<generics::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lifetime::Lifetime>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(proc_macro2::Group, buffer::Cursor), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Span, parse::ParseBuffer), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<data::FieldsNamed, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<data::FieldsUnnamed, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprParen, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::WhereClause, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Braces, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Brackets, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Group, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Parens, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<lit::Lit, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Ident, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::option::Option<generics::WhereClause>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeImplTrait, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeTraitObject, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeTuple, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size type: `data::FieldsNamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `data::FieldsUnnamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `derive::DataEnum`: 40 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `expr::ExprParen`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `generics::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Braces`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Brackets`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Group`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Parens`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `lit::Lit`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Verbatim`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Str`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro2::Ident`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::imp::Ident`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<generics::WhereClause>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<generics::WhereClause>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Punct, buffer::Cursor)>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::Visibility>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, parse::ParseBuffer>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<attr::NestedMeta, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<data::Field, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<data::Variant, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<expr::Expr, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<generics::TypeParamBound, token::Add>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<ty::Type, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<generics::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::imp::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ty::Variadic>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Punct, buffer::Cursor), error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<data::Visibility, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<parse::ParseBuffer, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Literal, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Literal, proc_macro2::LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<attr::NestedMeta, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<data::Field, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<data::Variant, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<expr::Expr, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<generics::TypeParamBound, token::Add>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<ty::Type, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypePtr, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::FromUtf8Error`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 16 bytes
print-type-size type: `ty::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `ty::TypeTuple`: 40 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::Variadic`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `data::Visibility`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Restricted`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Public`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Crate`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `error::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 32 bytes
print-type-size type: `parse::ParseBuffer`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `punctuated::IntoIter<data::Field>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `punctuated::IntoIter<generics::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `punctuated::Punctuated<attr::NestedMeta, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<data::Field, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<data::Field, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<data::Variant, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<expr::Expr, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<generics::GenericParam, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<generics::LifetimeDef, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<generics::TypeParamBound, token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<generics::WherePredicate, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<lifetime::Lifetime, token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<path::GenericArgument, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<path::PathSegment, token::Colon2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<ty::BareFnArg, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<ty::Type, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `std::cell::RefCell<std::vec::Vec<&str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(data::Field, ())>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Add)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(attr::NestedMeta, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(data::Field, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(data::Variant, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(expr::Expr, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(generics::GenericParam, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(generics::LifetimeDef, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(generics::TypeParamBound, token::Add)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(generics::WherePredicate, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(lifetime::Lifetime, token::Add)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(path::GenericArgument, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(path::PathSegment, token::Colon2)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(ty::BareFnArg, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<(ty::Type, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<attr::Attribute>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<error::ErrorMessage>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, (std::boxed::Box<str>, std::boxed::Box<str>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro2::Literal>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((), buffer::Cursor)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (expr::parsing::raw, buffer::Cursor)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Span, buffer::Cursor)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (token::Underscore, buffer::Cursor)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 1]>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 2]>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 3]>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, bool>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Break`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Index>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TraitBoundModifier>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitFloat>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitInt>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitStr>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, op::BinOp>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, op::UnOp>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::Span>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::boxed::Box<expr::Expr>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::boxed::Box<ty::Type>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lit::LitFloat>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lit::LitStr>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Add>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Colon2>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Colon>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Dyn>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Eq>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Mut>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Unsafe>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<ty::Abi>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::vec::Vec<attr::Attribute>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::And>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::As>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Bang>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Colon2>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Colon>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Const>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Crate>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dot3>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dot>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dyn>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Enum>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Eq>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Extern>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Fn>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::For>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Gt>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Impl>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::In>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Lt>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Mut>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Pound>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Pub>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::RArrow>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::SelfValue>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Semi>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Star>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Struct>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Tilde>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Underscore>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Union>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Unsafe>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Where>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::ReturnType>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypeGroup>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, u32>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<(proc_macro2::Punct, buffer::Cursor)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::boxed::Box<str>, std::boxed::Box<str>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, punctuated::Pair<&path::PathSegment, &token::Colon2>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<path::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Literal>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::cell::Cell<parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<((), buffer::Cursor), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(expr::parsing::raw, buffer::Cursor), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Span, buffer::Cursor), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(token::Underscore, buffer::Cursor), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 1], error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 2], error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 3], error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<bool, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Err`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<expr::Index, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<expr::parsing::raw, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<generics::TraitBoundModifier, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitBool, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitByte, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitByteStr, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitChar, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitFloat, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitInt, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitStr, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<op::BinOp, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<op::UnOp, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::Group, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Punct, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<proc_macro2::Span, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::boxed::Box<expr::Expr>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::boxed::Box<ty::Type>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<lit::LitFloat>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<lit::LitStr>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Add>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Colon2>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Colon>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Dyn>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Eq>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Mut>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Unsafe>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<ty::Abi>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<attr::Attribute>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<attr::NestedMeta>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<token::Abstract, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Add, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::AddEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::And, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::AndAnd, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::AndEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::As, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Async, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::At, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Auto, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Await, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Bang, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Become, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Box, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Break, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Caret, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::CaretEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Colon, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Colon2, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Comma, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Const, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Continue, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Crate, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Default, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Div, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::DivEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Do, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Dollar, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Dot, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Dot2, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Dot3, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<token::DotDotEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<token::Dyn, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Else, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Enum, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Eq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::EqEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Extern, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::FatArrow, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Final, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Fn, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::For, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Ge, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Gt, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::If, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Impl, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::In, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::LArrow, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Le, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Let, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Loop, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Lt, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Macro, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Match, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Mod, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Move, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::MulEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Mut, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Ne, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Or, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::OrEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::OrOr, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Override, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Pound, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Priv, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Pub, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Question, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::RArrow, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Ref, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Rem, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::RemEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Return, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::SelfType, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::SelfValue, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Semi, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Shl, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::ShlEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<token::Shr, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::ShrEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<token::Star, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Static, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Struct, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Sub, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::SubEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Super, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Tilde, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Trait, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Try, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Type, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Typeof, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Underscore, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Union, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Unsafe, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Unsized, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Use, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Virtual, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Where, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::While, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Yield, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<ty::Abi, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ty::ReturnType, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ty::TypeGroup, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ty::TypeInfer, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<ty::TypeNever, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<ty::TypeParen, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ty::TypeSlice, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<u32, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::thread::Inner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.parker`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::vec::IntoIter<(data::Field, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<(data::Field, token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<(generics::TypeParamBound, token::Add)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<(path::PathSegment, token::Colon2)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<data::Field>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<error::ErrorMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<generics::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `ty::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::mem::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<data::Field> as std::vec::spec_extend::SpecExtend<data::Field, std::iter::Map<std::vec::IntoIter<(data::Field, ())>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<data::Field> as std::vec::spec_extend::SpecExtend<data::Field, std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<data::Field> as std::vec::spec_extend::SpecExtend<data::Field, std::option::IntoIter<data::Field>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<generics::TypeParamBound> as std::vec::spec_extend::SpecExtend<generics::TypeParamBound, std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Add)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<generics::TypeParamBound> as std::vec::spec_extend::SpecExtend<generics::TypeParamBound, std::option::IntoIter<generics::TypeParamBound>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<error::ErrorMessage>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<std::mem::MaybeUninit<u8>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<u8>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<data::Field, [closure@<std::vec::Vec<data::Field> as std::vec::spec_extend::SpecExtend<data::Field, std::iter::Map<std::vec::IntoIter<(data::Field, ())>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<data::Field, [closure@<std::vec::Vec<data::Field> as std::vec::spec_extend::SpecExtend<data::Field, std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<data::Field, [closure@<std::vec::Vec<data::Field> as std::vec::spec_extend::SpecExtend<data::Field, std::option::IntoIter<data::Field>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, [closure@<std::vec::Vec<generics::TypeParamBound> as std::vec::spec_extend::SpecExtend<generics::TypeParamBound, std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Add)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, [closure@<std::vec::Vec<generics::TypeParamBound> as std::vec::spec_extend::SpecExtend<generics::TypeParamBound, std::option::IntoIter<generics::TypeParamBound>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(data::Field, ()), data::Field, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58], [closure@std::iter::Iterator::for_each::call<data::Field, [closure@<std::vec::Vec<data::Field> as std::vec::spec_extend::SpecExtend<data::Field, std::iter::Map<std::vec::IntoIter<(data::Field, ())>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(data::Field, token::Comma), data::Field, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58], [closure@std::iter::Iterator::for_each::call<data::Field, [closure@<std::vec::Vec<data::Field> as std::vec::spec_extend::SpecExtend<data::Field, std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(generics::TypeParamBound, token::Add), generics::TypeParamBound, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58], [closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, [closure@<std::vec::Vec<generics::TypeParamBound> as std::vec::spec_extend::SpecExtend<generics::TypeParamBound, std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Add)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `bigint::BigInt`: 24 bytes, alignment: 8 bytes
print-type-size     field `.digits`: 24 bytes
print-type-size type: `data::VisRestricted`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size type: `error::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `parse::StepCursor`: 24 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cursor`: 16 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro::ConcatStreamsHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.streams`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `proc_macro::TokenTree`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&attr::NestedMeta, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&data::Field, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&data::Variant, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&expr::Expr, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&generics::GenericParam, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&generics::LifetimeDef, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&generics::TypeParamBound, &token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&generics::WherePredicate, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&lifetime::Lifetime, &token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&path::GenericArgument, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&path::PathSegment, &token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&ty::BareFnArg, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&ty::Type, &token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pairs<attr::NestedMeta, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<data::Variant, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<expr::Expr, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<generics::LifetimeDef, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<generics::TypeParamBound, token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<generics::WherePredicate, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<lifetime::Lifetime, token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<path::GenericArgument, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<path::PathSegment, token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<ty::BareFnArg, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<ty::Type, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<generics::TypeParamBound, token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<path::PathSegment, token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<path::PathSegment, token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::vec::Vec<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Take<&mut punctuated::Pairs<path::PathSegment, token::Colon2>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(attr::NestedMeta, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(data::Field, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(data::Variant, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(expr::Expr, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(generics::GenericParam, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(generics::LifetimeDef, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(generics::TypeParamBound, token::Add)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(generics::WherePredicate, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(lifetime::Lifetime, token::Add)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(path::GenericArgument, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(path::PathSegment, token::Colon2)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(ty::BareFnArg, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(ty::Type, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<attr::Attribute>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<error::ErrorMessage>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Bytes>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<attr::Attribute>, for<'r, 's> fn(&'r &'s attr::Attribute) -> bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Map<punctuated::Pairs<path::PathSegment, token::Colon2>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/attr.rs:184:22: 184:28]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(data::Field, ())>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(data::Field, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(generics::TypeParamBound, token::Add)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(path::PathSegment, token::Colon2)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<buffer::Entry>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<data::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<error::ErrorMessage>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<generics::TypeParamBound>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, punctuated::Pair<&path::PathSegment, &token::Colon2>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<buffer::Cursor>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&attr::NestedMeta, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&data::Field, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&data::Variant, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&expr::Expr, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::GenericParam, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::LifetimeDef, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::TypeParamBound, &token::Add>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::WherePredicate, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&lifetime::Lifetime, &token::Add>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&path::GenericArgument, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&path::PathSegment, &token::Colon2>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&ty::BareFnArg, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&ty::Type, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ty::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<parse::Nothing, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(attr::NestedMeta, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Field, ())>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Field, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Variant, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(expr::Expr, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::GenericParam, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::LifetimeDef, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::TypeParamBound, token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::WherePredicate, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(lifetime::Lifetime, token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(path::GenericArgument, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(path::PathSegment, token::Colon2)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(ty::BareFnArg, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(ty::Type, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<attr::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<attr::NestedMeta>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<buffer::Entry>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<data::Field>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<generics::TypeParamBound>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::client::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(attr::NestedMeta, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(data::Field, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(data::Variant, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(expr::Expr, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(generics::GenericParam, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(generics::LifetimeDef, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(generics::TypeParamBound, token::Add), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(generics::WherePredicate, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(lifetime::Lifetime, token::Add), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(path::GenericArgument, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(path::PathSegment, token::Colon2), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(ty::BareFnArg, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<(ty::Type, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<attr::Attribute, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<error::ErrorMessage, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/group.rs:74:16: 74:24]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/token.rs:922:20: 922:28]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@core::slice::<impl [std::mem::MaybeUninit<u8>]>::split_at_mut_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29], [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const (data::Field, ())>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const (data::Field, token::Comma)>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const (generics::TypeParamBound, token::Add)>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const (path::PathSegment, token::Colon2)>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const error::ErrorMessage>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const generics::TypeParamBound>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<&str>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(attr::NestedMeta, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(data::Field, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(data::Variant, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(expr::Expr, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(generics::GenericParam, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(generics::LifetimeDef, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(generics::TypeParamBound, token::Add)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(generics::WherePredicate, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(lifetime::Lifetime, token::Add)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(path::GenericArgument, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(path::PathSegment, token::Colon2)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(ty::BareFnArg, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(ty::Type, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<attr::Attribute>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<error::ErrorMessage>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<std::mem::MaybeUninit<u8>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(data::Field, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(generics::GenericParam, token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(generics::TypeParamBound, token::Add)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(path::PathSegment, token::Colon2)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<buffer::Entry>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(attr::NestedMeta, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(data::Field, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(data::Variant, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(expr::Expr, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(generics::GenericParam, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(generics::LifetimeDef, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(generics::TypeParamBound, token::Add)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(generics::WherePredicate, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(lifetime::Lifetime, token::Add)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(path::GenericArgument, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(path::PathSegment, token::Colon2)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(ty::BareFnArg, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<(ty::Type, token::Comma)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<attr::Attribute>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<buffer::Entry>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<error::ErrorMessage>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<u8>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(attr::NestedMeta, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Field, ())>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Variant, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(expr::Expr, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::LifetimeDef, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::TypeParamBound, token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::WherePredicate, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(lifetime::Lifetime, token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(path::GenericArgument, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(path::PathSegment, token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(ty::BareFnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(ty::Type, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<attr::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<attr::NestedMeta>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<buffer::Entry>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<generics::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::client::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::sync::WeakInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size type: `buffer::Cursor`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size type: `buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `error::Iter`: 16 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 16 bytes
print-type-size type: `generics::ConstParams`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::ConstParamsMut`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::Lifetimes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::LifetimesMut`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::TypeParams`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::TypeParamsMut`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `lit::StrStyle`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Raw`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Cooked`: 0 bytes
print-type-size type: `op::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Chain`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `punctuated::Iter<data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<generics::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[proc_macro2::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterMutTrait<data::Field, Item = &mut data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterMutTrait<generics::GenericParam, Item = &mut generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterMutTrait<path::PathSegment, Item = &mut path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<data::Field, Item = &data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<generics::GenericParam, Item = &generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<path::PathSegment, Item = &path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::cell::Cell<buffer::Cursor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Ref<std::vec::Vec<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefMut<std::vec::Vec<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<buffer::Cursor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::iter::Copied<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<&str>, [closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<&str>, [closure@std::str::join_generic_copy<str, u8, &str>::{closure#1}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<&mut punctuated::Pairs<path::PathSegment, token::Colon2>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<buffer::Entry>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<buffer::Cursor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[buffer::Entry]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[error::ErrorMessage]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[proc_macro2::TokenTree]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::mem::MaybeUninit<buffer::Entry>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::mem::MaybeUninit<u8>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::raw_vec::RawVec<buffer::Entry>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::raw_vec::RawVec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<buffer::Cursor>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &generics::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(char, &proc_macro2::Span)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(attr::NestedMeta, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(data::Field, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(data::Variant, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(expr::Expr, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::GenericParam, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::LifetimeDef, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::TypeParamBound, token::Add))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::WherePredicate, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(lifetime::Lifetime, token::Add))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(path::GenericArgument, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(path::PathSegment, token::Colon2))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(ty::BareFnArg, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(ty::Type, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &attr::Attribute)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &error::ErrorMessage)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::sync::WeakInner>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<op::BinOp>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterMutTrait<data::Field, Item = &mut data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterMutTrait<generics::GenericParam, Item = &mut generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterMutTrait<path::PathSegment, Item = &mut path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<data::Field, Item = &data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<generics::GenericParam, Item = &generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<path::PathSegment, Item = &path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[proc_macro2::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterMutTrait<data::Field, Item = &mut data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterMutTrait<generics::GenericParam, Item = &mut generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterMutTrait<path::PathSegment, Item = &mut path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<data::Field, Item = &data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<generics::GenericParam, Item = &generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<path::PathSegment, Item = &path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(attr::NestedMeta, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(data::Field, ())]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(data::Field, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(data::Variant, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(expr::Expr, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(generics::GenericParam, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(generics::LifetimeDef, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(generics::TypeParamBound, token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(generics::WherePredicate, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(lifetime::Lifetime, token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(path::GenericArgument, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(path::PathSegment, token::Colon2)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(ty::BareFnArg, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(ty::Type, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[attr::Attribute]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[attr::NestedMeta]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[data::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[generics::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro2::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(attr::NestedMeta, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(data::Field, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(data::Variant, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(expr::Expr, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(generics::GenericParam, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(generics::LifetimeDef, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(generics::TypeParamBound, token::Add)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(generics::WherePredicate, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(lifetime::Lifetime, token::Add)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(path::GenericArgument, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(path::PathSegment, token::Colon2)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(ty::BareFnArg, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(ty::Type, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<attr::Attribute>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<error::ErrorMessage>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(attr::NestedMeta, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(data::Field, ())]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(data::Field, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(data::Variant, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(expr::Expr, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(generics::GenericParam, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(generics::LifetimeDef, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(generics::TypeParamBound, token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(generics::WherePredicate, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(lifetime::Lifetime, token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(path::GenericArgument, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(path::PathSegment, token::Colon2)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(ty::BareFnArg, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(ty::Type, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[attr::Attribute]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[attr::NestedMeta]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[data::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[generics::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro2::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(attr::NestedMeta, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(data::Field, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(data::Variant, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(expr::Expr, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(generics::GenericParam, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(generics::LifetimeDef, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(generics::TypeParamBound, token::Add)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(generics::WherePredicate, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(lifetime::Lifetime, token::Add)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(path::GenericArgument, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(path::PathSegment, token::Colon2)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(ty::BareFnArg, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(ty::Type, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<attr::Attribute>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<error::ErrorMessage>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&data::Field, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&generics::GenericParam, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&generics::TypeParamBound, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut data::Field, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut generics::GenericParam, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut path::PathSegment, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&path::PathSegment, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::Ref<std::vec::Vec<&str>>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<std::vec::Vec<&str>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(attr::NestedMeta, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(data::Variant, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(expr::Expr, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(generics::LifetimeDef, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(generics::TypeParamBound, token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(generics::WherePredicate, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(lifetime::Lifetime, token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(path::GenericArgument, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(path::PathSegment, token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(ty::BareFnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(ty::Type, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<attr::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<proc_macro2::Delimiter>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(path::PathSegment, token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `thread::ThreadBound<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread_id`: 8 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `ty::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypeParen`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypeSlice`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<token::Colon2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `token::Dot3`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::DotDotEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<(data::Field, ()), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<(data::Field, token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<(generics::TypeParamBound, token::Add), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<(path::PathSegment, token::Colon2), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<error::ErrorMessage, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<generics::TypeParamBound, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/attr.rs:637:49: 637:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/attr.rs:648:47: 648:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/data.rs:439:47: 439:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/data.rs:448:47: 448:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/data.rs:485:47: 485:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/derive.rs:263:55: 263:63]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/expr.rs:1411:32: 1411:36]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/expr.rs:2877:34: 2877:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/expr.rs:2893:56: 2893:61]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/expr.rs:3002:47: 3002:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/expr.rs:3361:49: 3361:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/expr.rs:3494:47: 3494:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/generics.rs:1246:29: 1246:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lifetime.rs:133:33: 133:35]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/mac.rs:208:44: 208:52]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/mac.rs:211:44: 211:52]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/mac.rs:214:46: 214:54]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/path.rs:745:67: 745:75]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/path.rs:831:47: 831:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:545:22: 545:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:635:22: 635:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:785:22: 785:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:793:22: 793:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:880:22: 880:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:888:22: 888:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/token.rs:897:20: 897:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1082:49: 1082:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1091:49: 1091:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1130:47: 1130:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1154:47: 1154:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1186:47: 1186:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1195:47: 1195:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::vec::IntoIter<proc_macro2::TokenTree>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::RawVec<buffer::Entry>::shrink::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::RawVec<u8>::shrink::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::slice::memchr::memchr::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(data::Field, ())>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(data::Field, token::Comma)>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(generics::TypeParamBound, token::Add)>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(path::PathSegment, token::Colon2)>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<error::ErrorMessage>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<generics::TypeParamBound>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::vec::IntoIter<proc_macro2::TokenTree>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&error::ErrorMessage, proc_macro2::TokenStream, (), for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}, [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}], [closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(proc_macro2::TokenTree, &proc_macro2::Span), proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(proc_macro2::TokenTree, &proc_macro2::Span), proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43], [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}], [closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<proc_macro2::Span>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_try_fold<&&str, usize, usize, std::option::Option<usize>, [closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}], fn(usize, usize) -> std::option::Option<usize> {core::num::<impl usize>::checked_add}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `attr::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `expr::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `generics::ImplGenerics`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `generics::TraitBoundModifier`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Maybe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `generics::Turbofish`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `generics::TypeGenerics`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `lit::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `lit::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `mac::MacroDelimiter`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Brace`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Bracket`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `op::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `print::TokensOrDefault<token::As>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<token::Colon>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<token::Const>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<token::Eq>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<token::Gt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<token::Lt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<token::Semi>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecMut<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::boxed::Box<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro2::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro2::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<generics::TypeParamBound, token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIterMut<data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIterMut<generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIterMut<path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::iter::Empty<&data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::iter::Empty<&mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::BorrowRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<*const buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<attr::NestedMeta>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<data::Variant>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<expr::Expr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<generics::GenericParam>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<generics::LifetimeDef>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<generics::TypeParamBound>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<generics::WherePredicate>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<lifetime::Lifetime>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<lit::LitFloatRepr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<lit::LitIntRepr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<lit::LitRepr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<path::GenericArgument>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<path::Path>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<path::PathSegment>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<ty::BareFnArg>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<ty::Type>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<attr::NestedMeta>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<data::Variant>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<expr::Expr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<generics::GenericParam>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<generics::LifetimeDef>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<generics::TypeParamBound>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<generics::WherePredicate>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<lifetime::Lifetime>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<path::GenericArgument>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<path::PathSegment>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<ty::BareFnArg>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::boxed::Box<ty::Type>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<*const buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<attr::NestedMeta>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<data::Variant>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<expr::Expr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<generics::GenericParam>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<generics::LifetimeDef>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<generics::TypeParamBound>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<generics::WherePredicate>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<lifetime::Lifetime>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<path::GenericArgument>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<path::PathSegment>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<ty::BareFnArg>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::boxed::Box<ty::Type>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&token::Colon2>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&token::Comma>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::ConstParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::ConstParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Delimiter>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&token::Colon2>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lit::LitFloat>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lit::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Add>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Paren>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::pin::Pin<std::sync::Arc<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Field, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::sync::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Delimiter>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::client::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<generics::TypeParamBound, token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIterMut<data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIterMut<generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIterMut<path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::iter::Empty<&data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::iter::Empty<&mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<&str>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(data::Field, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[proc_macro2::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[proc_macro2::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::client::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<generics::TypeParamBound, token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIterMut<data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIterMut<generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIterMut<path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::iter::Empty<&data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::iter::Empty<&mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<attr::NestedMeta>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<data::Field>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<data::Variant>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<expr::Expr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::GenericParam>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::LifetimeDef>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::TypeParamBound>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::WherePredicate>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lifetime::Lifetime>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitFloatRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitIntRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::GenericArgument>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::Path>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::PathSegment>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<ty::BareFnArg>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<ty::Type>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Weak<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `token::AddEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Colon2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::DivEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Dot2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::FatArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::LArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::MulEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::RemEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::SubEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `data::VisCrate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.crate_token`: 4 bytes
print-type-size type: `data::VisPublic`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size type: `expr::parsing::raw`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sys_common::thread_parker::futex::Parker`: 4 bytes, alignment: 4 bytes
print-type-size     field `.state`: 4 bytes
print-type-size type: `token::Abstract`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Add`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Async`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::At`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Auto`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Await`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Bang`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Become`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Box`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Brace`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Bracket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Break`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Continue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Crate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Default`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Div`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Do`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Dollar`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Else`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Final`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::If`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Let`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Loop`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Macro`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Match`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Mod`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Move`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Override`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Paren`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Priv`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Ref`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Rem`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Return`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::SelfType`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::SelfValue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Static`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Sub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Super`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Tilde`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Trait`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Try`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Type`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Typeof`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Unsized`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Use`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Virtual`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::While`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Yield`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::private::WithSpan`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `ty::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `ty::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `expr::parsing::AllowStruct`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `expr::parsing::Precedence`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Any`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size     variant `Or`: 0 bytes
print-type-size     variant `And`: 0 bytes
print-type-size     variant `Compare`: 0 bytes
print-type-size     variant `BitOr`: 0 bytes
print-type-size     variant `BitXor`: 0 bytes
print-type-size     variant `BitAnd`: 0 bytes
print-type-size     variant `Shift`: 0 bytes
print-type-size     variant `Arithmetic`: 0 bytes
print-type-size     variant `Term`: 0 bytes
print-type-size     variant `Cast`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, proc_macro2::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::vec::ExtendElement<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/attr.rs:179:22: 179:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/attr.rs:184:22: 184:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/custom_keyword.rs:145:28: 145:36]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ext.rs:91:20: 91:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/generics.rs:175:46: 175:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/group.rs:38:56: 38:73]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/group.rs:47:50: 47:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/group.rs:56:52: 56:69]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/group.rs:64:49: 64:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ident.rs:41:20: 41:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lifetime.rs:130:24: 130:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:1518:31: 1518:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/lit.rs:747:24: 747:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/mac.rs:154:16: 154:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/parse.rs:1086:20: 1086:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/parse.rs:1093:20: 1093:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/parse.rs:1103:20: 1103:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/parse.rs:1119:20: 1119:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/parse.rs:1129:20: 1129:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:148:33: 148:36]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:495:52: 495:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:496:39: 496:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:544:18: 544:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:634:18: 634:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:784:18: 784:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:793:52: 793:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:879:18: 879:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/punctuated.rs:888:52: 888:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/token.rs:572:20: 572:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.99/src/ty.rs:1024:26: 1024:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<error::ErrorMessage>, for<'r> fn(&'r error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::rfind<char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::str::join_generic_copy<str, u8, &str>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `expr::ExprArray`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprAssign`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprAssignOp`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprAsync`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprAwait`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprBox`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprBreak`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprClosure`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprContinue`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprForLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprGroup`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprIf`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprLet`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprMacro`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprMatch`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprMethodCall`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprRange`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprReference`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprRepeat`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprReturn`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprStruct`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprTry`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprTryBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprTuple`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprType`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprUnsafe`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprWhile`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprYield`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `ext::private::PeekFn`: 0 bytes, alignment: 1 bytes
print-type-size type: `lookahead::TokenMarker`: 0 bytes, alignment: 1 bytes
print-type-size type: `parse::Nothing`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::Empty<&data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::iter::Empty<&mut data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(attr::NestedMeta, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(data::Variant, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(expr::Expr, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::LifetimeDef, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::TypeParamBound, token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::WherePredicate, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(lifetime::Lifetime, token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(path::GenericArgument, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(path::PathSegment, token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(ty::BareFnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(ty::Type, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&attr::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (path::PathSegment, token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::vec::Vec<&str>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Delimiter>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(attr::NestedMeta, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Field, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Variant, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(expr::Expr, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::LifetimeDef, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::TypeParamBound, token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::WherePredicate, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(lifetime::Lifetime, token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(path::GenericArgument, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(path::PathSegment, token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ty::BareFnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ty::Type, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[buffer::Entry]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[error::ErrorMessage; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[error::ErrorMessage]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro2::TokenTree; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro2::TokenTree; 3]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro2::TokenTree]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<buffer::Entry>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<u8>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::sync::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<attr::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<attr::NestedMeta>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<buffer::Cursor>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<data::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<data::Field, Item = &mut data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<generics::GenericParam, Item = &mut generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<path::PathSegment, Item = &mut path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<data::Field, Item = &data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<generics::GenericParam, Item = &generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<path::PathSegment, Item = &path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<expr::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(buffer::Cursor) -> buffer::Cursor>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::LifetimeDef>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lifetime::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::client::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<data::Field, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<generics::GenericParam, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<generics::TypeParamBound, token::Add>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<path::PathSegment, token::Colon2>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIterMut<data::Field, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIterMut<generics::GenericParam, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIterMut<path::PathSegment, token::Colon2>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::iter::Empty<&data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::iter::Empty<&mut data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::iter::sources::empty::FnReturning<&data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::iter::sources::empty::FnReturning<&mut data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<attr::NestedMeta>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<data::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<expr::Expr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::LifetimeDef>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::WherePredicate>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lifetime::Lifetime>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitIntRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::Path>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<ty::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<ty::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ty::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ty::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `internals::ast::Container`: 1056 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.attrs`: 968 bytes
print-type-size     field `.data`: 32 bytes
print-type-size     field `.generics`: 8 bytes
print-type-size     field `.original`: 8 bytes
print-type-size type: `std::option::Option<internals::ast::Container>`: 1056 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 1056 bytes
print-type-size         field `.0`: 1056 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `internals::attr::Container`: 968 bytes, alignment: 8 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.default`: 104 bytes
print-type-size     field `.ser_bound`: 24 bytes
print-type-size     field `.de_bound`: 24 bytes
print-type-size     field `.tag`: 56 bytes
print-type-size     field `.type_from`: 184 bytes
print-type-size     field `.type_try_from`: 184 bytes
print-type-size     field `.type_into`: 184 bytes
print-type-size     field `.remote`: 48 bytes
print-type-size     field `.serde_path`: 48 bytes
print-type-size     field `.expecting`: 24 bytes
print-type-size     field `.transparent`: 1 bytes
print-type-size     field `.deny_unknown_fields`: 1 bytes
print-type-size     field `.rename_all_rules`: 2 bytes
print-type-size     field `.identifier`: 1 bytes
print-type-size     field `.has_flatten`: 1 bytes
print-type-size     field `.is_packed`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `internals::ast::Field`: 744 bytes, alignment: 8 bytes
print-type-size     field `.member`: 48 bytes
print-type-size     field `.attrs`: 680 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.original`: 8 bytes
print-type-size type: `std::option::Option<internals::ast::Field>`: 744 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 744 bytes
print-type-size         field `.0`: 744 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `internals::attr::Field`: 680 bytes, alignment: 8 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.skip_serializing_if`: 104 bytes
print-type-size     field `.default`: 104 bytes
print-type-size     field `.serialize_with`: 104 bytes
print-type-size     field `.deserialize_with`: 104 bytes
print-type-size     field `.ser_bound`: 24 bytes
print-type-size     field `.de_bound`: 24 bytes
print-type-size     field `.borrowed_lifetimes`: 24 bytes
print-type-size     field `.getter`: 104 bytes
print-type-size     field `.skip_serializing`: 1 bytes
print-type-size     field `.skip_deserializing`: 1 bytes
print-type-size     field `.flatten`: 1 bytes
print-type-size     field `.transparent`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.value`: 640 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 640 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 640 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 640 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 528 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.value`: 544 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 544 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 544 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 544 bytes
print-type-size type: `internals::ast::Variant`: 528 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.attrs`: 448 bytes
print-type-size     field `.fields`: 24 bytes
print-type-size     field `.original`: 8 bytes
print-type-size     field `.style`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<internals::ast::Variant>`: 528 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 528 bytes
print-type-size         field `.0`: 528 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `internals::attr::Variant`: 448 bytes, alignment: 8 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.ser_bound`: 24 bytes
print-type-size     field `.de_bound`: 24 bytes
print-type-size     field `.serialize_with`: 104 bytes
print-type-size     field `.deserialize_with`: 104 bytes
print-type-size     field `.borrow`: 104 bytes
print-type-size     field `.rename_all_rules`: 2 bytes
print-type-size     field `.skip_deserializing`: 1 bytes
print-type-size     field `.skip_serializing`: 1 bytes
print-type-size     field `.other`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::iter::Chain<std::option::IntoIter<syn::GenericParam>, syn::punctuated::IntoIter<syn::GenericParam>>`: 416 bytes, alignment: 8 bytes
print-type-size     field `.a`: 384 bytes
print-type-size     field `.b`: 32 bytes
print-type-size type: `std::iter::Chain<std::option::IntoIter<syn::GenericParam>, std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<syn::GenericParam>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:346:52: 346:63]>>`: 408 bytes, alignment: 8 bytes
print-type-size     field `.a`: 384 bytes
print-type-size     field `.b`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::GenericParam, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.value`: 392 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::WherePredicate, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.value`: 392 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::GenericParam, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 392 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 392 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::WherePredicate, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 392 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 392 bytes
print-type-size type: `std::option::Option<(syn::GenericParam, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::WherePredicate, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<syn::GenericParam>>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<syn::WherePredicate>>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::GenericParam>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::WherePredicate>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<syn::GenericParam>>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<syn::WherePredicate>>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<syn::GenericParam>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<syn::WherePredicate>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::option::IntoIter<syn::GenericParam>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 384 bytes
print-type-size type: `std::option::IntoIter<syn::WherePredicate>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 384 bytes
print-type-size type: `std::option::Item<syn::GenericParam>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 384 bytes
print-type-size type: `std::option::Item<syn::WherePredicate>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 384 bytes
print-type-size type: `std::option::Option<std::option::IntoIter<syn::GenericParam>>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::GenericParam>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::WherePredicate>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::GenericParam`: 384 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Type`: 296 bytes
print-type-size         field `.0`: 296 bytes
print-type-size     variant `Lifetime`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size type: `syn::WherePredicate`: 384 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Eq`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Type`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Lifetime`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.data`: 280 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.value`: 376 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 376 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 376 bytes
print-type-size type: `syn::ConstParam`: 376 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.ty`: 184 bytes
print-type-size     field `.default`: 112 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `syn::PredicateEq`: 376 bytes, alignment: 8 bytes
print-type-size     field `.lhs_ty`: 184 bytes
print-type-size     field `.rhs_ty`: 184 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeParam`: 296 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.default`: 184 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `syn::Field`: 288 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.ty`: 184 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.value`: 280 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 280 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 280 bytes
print-type-size type: `syn::PredicateType`: 272 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.bounded_ty`: 184 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Chain<std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>, std::option::IntoIter<syn::NestedMeta>>`: 264 bytes, alignment: 8 bytes
print-type-size     field `.a`: 152 bytes
print-type-size     field `.b`: 112 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::DeriveInput>`: 264 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::DeriveInput, syn::Error>`: 264 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::BareFnArg`: 256 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.name`: 48 bytes
print-type-size     field `.ty`: 184 bytes
print-type-size type: `syn::DeriveInput`: 256 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.data`: 72 bytes
print-type-size type: `internals::attr::Attr<syn::Type>`: 248 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 184 bytes
print-type-size type: `std::option::Option<syn::GenericArgument>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::GenericArgument`: 240 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Binding`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Type`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Const`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Constraint`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Lifetime`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `syn::Binding`: 232 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.ty`: 184 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Variant`: 232 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.discriminant`: 120 bytes
print-type-size type: `de::Parameters`: 216 bytes, alignment: 8 bytes
print-type-size     field `.local`: 40 bytes
print-type-size     field `.this`: 48 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.borrowed`: 32 bytes
print-type-size     field `.has_getter`: 1 bytes
print-type-size     field `.is_packed`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Type>`: 192 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::Type, syn::Error>`: 192 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ser::Parameters`: 184 bytes, alignment: 8 bytes
print-type-size     field `.self_var`: 40 bytes
print-type-size     field `.this`: 48 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.is_remote`: 1 bytes
print-type-size     field `.is_packed`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::option::Option<syn::Type>`: 184 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::Type, ()>`: 184 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::Type`: 184 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `BareFn`: 180 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 132 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 108 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 84 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 76 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Never`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, (internals::attr::VecAttr<&syn::LitStr>, internals::attr::VecAttr<&syn::LitStr>)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, (internals::attr::VecAttr<std::vec::Vec<syn::WherePredicate>>, internals::attr::VecAttr<std::vec::Vec<syn::WherePredicate>>)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(internals::attr::VecAttr<&syn::LitStr>, internals::attr::VecAttr<&syn::LitStr>), ()>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(internals::attr::VecAttr<std::vec::Vec<syn::WherePredicate>>, internals::attr::VecAttr<std::vec::Vec<syn::WherePredicate>>), ()>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::TypeBareFn`: 176 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.variadic`: 40 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `internals::attr::Attr<internals::attr::Default>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `internals::attr::Attr<syn::ExprPath>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `internals::attr::Attr<syn::Meta>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 152 bytes
print-type-size type: `std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 152 bytes
print-type-size type: `std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 152 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>, std::vec::IntoIter<syn::NestedMeta>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>, std::vec::IntoIter<syn::NestedMeta>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>, std::vec::IntoIter<syn::NestedMeta>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::option::Option<std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>>`: 152 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::iter::Skip<syn::punctuated::IntoPairs<syn::PathSegment, syn::token::Colon2>>`: 144 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 136 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `syn::punctuated::IntoPairs<syn::PathSegment, syn::token::Colon2>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `.last`: 104 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>, usize>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::TypeArray`: 128 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.len`: 112 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `bound::with_bound::FindTyParams`: 120 bytes, alignment: 8 bytes
print-type-size     field `.all_type_params`: 48 bytes
print-type-size     field `.relevant_type_params`: 48 bytes
print-type-size     field `.associated_type_usage`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::NestedMeta, syn::token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::NestedMeta, syn::token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(syn::NestedMeta, syn::token::Comma)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::Eq, syn::Expr)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeParamBound`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trait`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Lifetime`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Punctuated`: 116 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `End`: 108 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size type: `internals::attr::Attr<syn::Path>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<syn::NestedMeta>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::NestedMeta>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<syn::NestedMeta>>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 112 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 112 bytes
print-type-size type: `std::mem::MaybeUninit<syn::NestedMeta>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 112 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 112 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::ExprPath>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::IntoIter<syn::NestedMeta>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 112 bytes
print-type-size type: `std::option::Item<syn::NestedMeta>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 112 bytes
print-type-size type: `std::option::Option<std::option::IntoIter<syn::NestedMeta>>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Expr>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LifetimeDef>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::NestedMeta>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::ExprPath, syn::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::Meta, syn::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::Expr`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Field`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Call`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Lit`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Binary`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Cast`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Index`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Paren`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unary`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `AssignOp`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Async`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Await`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Block`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Box`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Closure`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `ForLoop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Group`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `If`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Let`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Loop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Macro`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `MethodCall`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Reference`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Repeat`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Try`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `TryBlock`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Unsafe`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `While`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Yield`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::LifetimeDef`: 112 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lifetime`: 48 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `syn::NestedMeta`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Meta`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Lit`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `syn::TraitBound`: 112 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.paren_token`: 8 bytes
print-type-size     field `.modifier`: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `internals::attr::Default`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<syn::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::option::IntoIter<syn::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 104 bytes
print-type-size type: `std::option::Item<syn::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 104 bytes
print-type-size type: `std::option::Option<internals::attr::Default>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::ExprPath>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Meta>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::PathSegment>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::ExprPath, ()>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `syn::Attribute`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size type: `syn::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `syn::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     field `.delimiter`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Meta`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NameValue`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `List`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Path`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `syn::PathSegment`: 104 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size type: `syn::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `internals::attr::Attr<std::collections::BTreeSet<syn::Lifetime>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::iter::Map<std::ops::Range<usize>, fn(usize) -> proc_macro2::Ident>, std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:651:51: 651:65]>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 64 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::thread::__FastLocalKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::MetaNameValue`: 96 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.lit`: 40 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `internals::attr::Attr<std::string::String>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `internals::attr::Attr<std::vec::Vec<syn::WherePredicate>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `internals::attr::VecAttr<&syn::LitStr>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.first_dup_tokens`: 40 bytes
print-type-size     field `.values`: 24 bytes
print-type-size type: `internals::attr::VecAttr<std::string::String>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.first_dup_tokens`: 40 bytes
print-type-size     field `.values`: 24 bytes
print-type-size type: `internals::attr::VecAttr<std::vec::Vec<syn::WherePredicate>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.first_dup_tokens`: 40 bytes
print-type-size     field `.values`: 24 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<proc_macro::bridge::client::BridgeStateL>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.cell`: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::collections::btree_map::Entry<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::iter::FlatMap<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>, std::vec::Vec<syn::WherePredicate>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]>, std::vec::Vec<syn::WherePredicate>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::Fuse<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::iter::Fuse<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::iter::Fuse<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>, std::vec::IntoIter<syn::WherePredicate>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>, std::vec::IntoIter<syn::WherePredicate>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>, std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>, std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>, std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 88 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 88 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::TypePath>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<internals::attr::VecAttr<std::string::String>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::TypePath, syn::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::thread::local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `syn::ExprField`: 88 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.member`: 48 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `syn::MetaList`: 88 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.nested`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PredicateLifetime`: 88 bytes, alignment: 8 bytes
print-type-size     field `.lifetime`: 48 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 48 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 48 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 48 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `internals::attr::Name`: 80 bytes, alignment: 8 bytes
print-type-size     field `.serialize`: 24 bytes
print-type-size     field `.deserialize`: 24 bytes
print-type-size     field `.deserialize_aliases`: 24 bytes
print-type-size     field `.serialize_renamed`: 1 bytes
print-type-size     field `.deserialize_renamed`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `proc_macro::bridge::client::BridgeState`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Connected`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `InUse`: 0 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::cell::Cell<proc_macro::bridge::client::BridgeState>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::BridgeState>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.key`: 48 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::BridgeState>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<proc_macro::bridge::client::BridgeState>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::client::BridgeState>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<proc_macro::bridge::client::BridgeState>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::BridgeState>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::TypePath>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Constraint`: 80 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `internals::attr::Attr<()>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `internals::attr::Attr<internals::case::RenameRule>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `internals::attr::BoolAttr`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `proc_macro::bridge::client::Bridge`: 72 bytes, alignment: 8 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::IntoIter<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Iter<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Keys<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 72 bytes
print-type-size type: `std::collections::btree_set::IntoIter<std::string::String>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::collections::btree_set::Iter<syn::Lifetime>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size type: `std::iter::Cloned<std::collections::btree_set::Iter<syn::Lifetime>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.it`: 72 bytes
print-type-size type: `std::iter::Map<std::collections::btree_set::Iter<syn::Lifetime>, for<'r> fn(&'r syn::Lifetime) -> syn::Lifetime {<syn::Lifetime as std::clone::Clone>::clone}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::Data`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Struct`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Union`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Enum`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `syn::ExprCall`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeReference`: 72 bytes, alignment: 8 bytes
print-type-size     field `.lifetime`: 48 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::collections::btree_map::Entry<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:277:14: 277:18]>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:282:14: 282:26]>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Zip<std::iter::Map<std::ops::Range<usize>, fn(usize) -> proc_macro2::Ident>, std::slice::Iter<internals::ast::Field>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenStream, std::string::String)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `syn::DataStruct`: 64 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprLit`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lit`: 40 bytes
print-type-size type: `syn::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `AngleBracketed`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Parenthesized`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `internals::attr::TagType`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Adjacent`: 48 bytes
print-type-size         field `.tag`: 24 bytes
print-type-size         field `.content`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.tag`: 24 bytes
print-type-size     variant `External`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `ser::TupleVariant`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ExternallyTagged`: 52 bytes
print-type-size         field `.variant_index`: 4 bytes
print-type-size         field `.type_name`: 24 bytes
print-type-size         field `.variant_name`: 24 bytes
print-type-size     variant `Untagged`: 0 bytes
print-type-size type: `std::borrow::Cow<syn::Path>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Owned`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Borrowed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:277:14: 277:18]>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size     field `.b`: 32 bytes
print-type-size type: `std::iter::FilterMap<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1411:17: 1411:32]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1412:21: 1412:35]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29]>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:276:14: 276:26]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::Lifetime, syn::token::Add)>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::Lifetime, syn::token::Add)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, proc_macro2::TokenTree>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::option::Option<proc_macro2::TokenTree>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Lifetime>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Path>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(syn::Lifetime, syn::token::Add)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<std::vec::Vec<syn::WherePredicate>>, std::option::Option<std::vec::Vec<syn::WherePredicate>>), ()>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenTree, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro2::TokenTree>, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::Lifetime, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::Path, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size type: `syn::ParenthesizedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::error::ErrorMessage`: 56 bytes, alignment: 8 bytes
print-type-size     field `.start_span`: 16 bytes
print-type-size     field `.end_span`: 16 bytes
print-type-size     field `.message`: 24 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&internals::ast::Variant, (), [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Variant), proc_macro2::TokenStream, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:412:14: 412:40], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:412:14: 412:40]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `core::str::iter::MatchIndicesInternal<char>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `fragment::Expr`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `fragment::Fragment`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Expr`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Block`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `fragment::Match`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `fragment::Stmts`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size type: `proc_macro2::TokenTree`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ident`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 48 bytes, alignment: 8 bytes
print-type-size     field `.FreeFunctions`: 8 bytes
print-type-size     field `.TokenStream`: 8 bytes
print-type-size     field `.SourceFile`: 8 bytes
print-type-size     field `.MultiSpan`: 8 bytes
print-type-size     field `.Diagnostic`: 8 bytes
print-type-size     field `.Span`: 8 bytes
print-type-size type: `quote::__private::RepInterp<fragment::Expr>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `quote::__private::RepInterp<syn::Member>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `ser::StructVariant`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `InternallyTagged`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.tag`: 16 bytes, alignment: 8 bytes
print-type-size         field `.variant_name`: 24 bytes
print-type-size     variant `ExternallyTagged`: 28 bytes
print-type-size         field `.variant_index`: 4 bytes
print-type-size         field `.variant_name`: 24 bytes
print-type-size     variant `Untagged`: 0 bytes
print-type-size type: `std::collections::HashSet<proc_macro2::Ident>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<internals::ast::Variant>, std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<syn::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:192:14: 192:26]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1048:17: 1048:29]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1049:14: 1049:26]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29]>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:819:14: 819:26]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29]>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.peeked`: 24 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29]>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.peeked`: 24 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>, std::slice::Iter<internals::ast::Field>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.frontiter`: 16 bytes
print-type-size     field `.backiter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<syn::Lifetime>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::Lifetime>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<syn::Lifetime>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<syn::Lifetime>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, proc_macro2::LexError>, proc_macro2::TokenStream>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, proc_macro2::TokenStream>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::WhereClause>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::IntoIter<syn::Lifetime>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::option::Item<syn::Lifetime>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 48 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, &internals::ast::Field)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, syn::token::Colon)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fragment::Expr>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fragment::Fragment>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fragment::Stmts>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lifetime>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Member>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, std::vec::Vec<syn::Error>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, syn::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::Path, ()>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<syn::WhereClause, syn::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::MatchIndices<char>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size type: `syn::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataUnion`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 40 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprIndex`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Fields`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unnamed`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `syn::Lifetime`: 48 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 40 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Member`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Named`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Entry`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Ident`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `End`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::lit::LitRepr`: 48 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Variant), proc_macro2::TokenStream, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:412:14: 412:40], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:412:14: 412:40]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `hashbrown::raw::RawIter<(proc_macro2::Ident, ())>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `proc_macro2::Ident`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::imp::Ident`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `quote::__private::RepInterp<proc_macro2::Ident>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `quote::__private::RepInterp<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:412:14: 412:40]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1230:17: 1230:32]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1231:14: 1231:28]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1314:17: 1314:32]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1315:14: 1315:28]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1367:17: 1367:32]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1368:14: 1368:28]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1095:17: 1095:25]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1096:14: 1096:21]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:334:17: 334:25]>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:340:14: 340:21]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:373:17: 373:25]>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:382:18: 382:25]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::buffer::Buffer>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::buffer::Buffer>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::Ident, std::convert::Infallible>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::Ident>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::TokenStream, std::convert::Infallible>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<proc_macro2::Ident, std::convert::Infallible>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<proc_macro2::TokenStream, std::convert::Infallible>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<std::alloc::Global>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, internals::attr::parse_lit_into_lifetimes::BorrowedLifetimes>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::parse::ParseBuffer>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenStream, ())>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Variadic>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner<std::alloc::Global>, hashbrown::TryReserveError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<internals::attr::parse_lit_into_lifetimes::BorrowedLifetimes, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::AccessError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<syn::parse::ParseBuffer, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::DataEnum`: 40 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprParen`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `syn::FieldsNamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsUnnamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lit`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Verbatim`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Str`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `syn::TypeTuple`: 40 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Variadic`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1412:21: 1412:35]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:651:51: 651:65]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1648:35: 1648:38]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&internals::ast::Field, (), [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field), (&internals::ast::Field, proc_macro2::Ident), (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2443:14: 2443:26], [closure@std::iter::Iterator::for_each::call<(&internals::ast::Field, proc_macro2::Ident), [closure@<std::vec::Vec<(&internals::ast::Field, proc_macro2::Ident)> as std::vec::spec_extend::SpecExtend<(&internals::ast::Field, proc_macro2::Ident), std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2443:14: 2443:26]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(&std::string::String, &proc_macro2::Ident), proc_macro2::TokenStream, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2106:14: 2106:26], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2106:14: 2106:26]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), proc_macro2::TokenStream, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2110:14: 2110:29], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2110:14: 2110:29]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&std::string::String, (&std::string::String, &proc_macro2::Ident), (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2095:47: 2095:54], [closure@std::iter::Iterator::for_each::call<(&std::string::String, &proc_macro2::Ident), [closure@<std::vec::Vec<(&std::string::String, &proc_macro2::Ident)> as std::vec::spec_extend::SpecExtend<(&std::string::String, &proc_macro2::Ident), std::iter::Map<std::slice::Iter<std::string::String>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2095:47: 2095:54]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `de::BorrowedLifetimes`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Static`: 0 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(proc_macro2::Ident, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(proc_macro2::Ident, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `hashbrown::raw::RawTableInner<std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `internals::ast::Data`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Enum`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 31 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 24 bytes, alignment: 8 bytes
print-type-size type: `internals::attr::parse_lit_into_lifetimes::BorrowedLifetimes`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `internals::ctxt::Ctxt`: 32 bytes, alignment: 8 bytes
print-type-size     field `.errors`: 32 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `StaticStr`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::cell::RefCell<std::option::Option<std::vec::Vec<syn::Error>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.it`: 32 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:258:29: 258:36]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1655:17: 1655:26]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1656:14: 1656:23]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:890:17: 890:25]>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:896:14: 896:21]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:175:37: 175:46]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>, [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<syn::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:145:14: 145:23]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:334:17: 334:25]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:373:17: 373:25]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:890:17: 890:25]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:964:17: 964:25]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<std::string::String>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<syn::WherePredicate>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::mem::MaybeUninit<hashbrown::raw::RawTableInner<std::alloc::Global>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::mem::MaybeUninit<hashbrown::raw::RawTableInner<std::alloc::Global>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, std::option::Option<std::vec::Vec<syn::WherePredicate>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::collections::BTreeSet<syn::Lifetime>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<syn::NestedMeta>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<syn::WherePredicate>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::IntoIter<syn::GenericParam>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<&syn::LitStr>, std::vec::Vec<&syn::LitStr>), ()>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::collections::BTreeSet<syn::Lifetime>, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<std::vec::Vec<syn::WherePredicate>>, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::vec::Vec<syn::WherePredicate>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::token::Add, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::thread::__FastLocalKeyInner<std::cell::Cell<(u64, u64)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::vec::IntoIter<&syn::LitStr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<&syn::TypePath>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::PathSegment, syn::token::Colon2)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::GenericParam>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::NestedMeta>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::PathSegment>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::WherePredicate>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `syn::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Visibility`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Restricted`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Public`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Crate`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `syn::parse::ParseBuffer`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::GenericParam>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::NestedMeta>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::WherePredicate>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::BareFnArg, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Field, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::LifetimeDef, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Type, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::TypeParamBound, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Variant, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:192:14: 192:26]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1611:35: 1611:38]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1622:35: 1622:38]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/check.rs:259:29: 259:31]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1049:14: 1049:26]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1096:14: 1096:21]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Variant, (), std::ops::ControlFlow<proc_macro2::TokenStream>, [closure@std::iter::adapters::filter::filter_try_fold<(usize, &internals::ast::Variant), (), std::ops::ControlFlow<proc_macro2::TokenStream>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1411:17: 1411:32], [closure@std::iter::Iterator::find_map::check<(usize, &internals::ast::Variant), proc_macro2::TokenStream, &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1412:21: 1412:35]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[internals::ast::Variant]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::mem::MaybeUninit<std::string::String>]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::mem::MaybeUninit<std::string::String>]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::mem::MaybeUninit<syn::Lifetime>]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::mem::MaybeUninit<syn::Lifetime>]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[std::string::String]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[syn::Lifetime]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<&&std::string::String> as std::vec::spec_extend::SpecExtend<&&std::string::String, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2098:55: 2098:66]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<&proc_macro2::Ident> as std::vec::spec_extend::SpecExtend<&proc_macro2::Ident, std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1911:52: 1911:67]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<&syn::Member> as std::vec::spec_extend::SpecExtend<&syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:98:37: 98:44]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<&syn::Member> as std::vec::spec_extend::SpecExtend<&syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:976:46: 976:49]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<&syn::Type> as std::vec::spec_extend::SpecExtend<&syn::Type, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1167:55: 1167:62]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<(&internals::ast::Field, proc_macro2::Ident)> as std::vec::spec_extend::SpecExtend<(&internals::ast::Field, proc_macro2::Ident), std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2443:14: 2443:26]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<(&std::string::String, &proc_macro2::Ident)> as std::vec::spec_extend::SpecExtend<(&std::string::String, &proc_macro2::Ident), std::iter::Map<std::slice::Iter<std::string::String>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2095:47: 2095:54]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)> as std::vec::spec_extend::SpecExtend<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2024:14: 2024:23]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<proc_macro2::Ident> as std::vec::spec_extend::SpecExtend<proc_macro2::Ident, std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:178:18: 178:21]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<proc_macro2::Literal> as std::vec::spec_extend::SpecExtend<proc_macro2::Literal, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2101:14: 2101:25]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:412:14: 412:40]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2106:14: 2106:26]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2110:14: 2110:29]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1171:14: 1171:21]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::GenericParam> as std::vec::spec_extend::SpecExtend<syn::GenericParam, std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::GenericParam> as std::vec::spec_extend::SpecExtend<syn::GenericParam, std::option::IntoIter<syn::GenericParam>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::Lifetime> as std::vec::spec_extend::SpecExtend<syn::Lifetime, std::iter::Map<std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>, [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::Lifetime> as std::vec::spec_extend::SpecExtend<syn::Lifetime, std::option::IntoIter<syn::Lifetime>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::Member> as std::vec::spec_extend::SpecExtend<syn::Member, std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:705:18: 705:21]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::Member> as std::vec::spec_extend::SpecExtend<syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:707:52: 707:55]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::NestedMeta> as std::vec::spec_extend::SpecExtend<syn::NestedMeta, std::iter::Map<std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::NestedMeta> as std::vec::spec_extend::SpecExtend<syn::NestedMeta, std::option::IntoIter<syn::NestedMeta>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::WherePredicate> as std::vec::spec_extend::SpecExtend<syn::WherePredicate, std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::vec::Vec<syn::WherePredicate> as std::vec::spec_extend::SpecExtend<syn::WherePredicate, std::option::IntoIter<syn::WherePredicate>>>::spec_extend::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<std::mem::MaybeUninit<std::string::String>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<std::mem::MaybeUninit<syn::Lifetime>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<u8>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&&std::string::String, [closure@<std::vec::Vec<&&std::string::String> as std::vec::spec_extend::SpecExtend<&&std::string::String, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2098:55: 2098:66]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&proc_macro2::Ident, [closure@<std::vec::Vec<&proc_macro2::Ident> as std::vec::spec_extend::SpecExtend<&proc_macro2::Ident, std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1911:52: 1911:67]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&syn::Member, [closure@<std::vec::Vec<&syn::Member> as std::vec::spec_extend::SpecExtend<&syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:98:37: 98:44]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&syn::Member, [closure@<std::vec::Vec<&syn::Member> as std::vec::spec_extend::SpecExtend<&syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:976:46: 976:49]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&syn::Type, [closure@<std::vec::Vec<&syn::Type> as std::vec::spec_extend::SpecExtend<&syn::Type, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1167:55: 1167:62]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(&internals::ast::Field, proc_macro2::Ident), [closure@<std::vec::Vec<(&internals::ast::Field, proc_macro2::Ident)> as std::vec::spec_extend::SpecExtend<(&internals::ast::Field, proc_macro2::Ident), std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2443:14: 2443:26]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(&std::string::String, &proc_macro2::Ident), [closure@<std::vec::Vec<(&std::string::String, &proc_macro2::Ident)> as std::vec::spec_extend::SpecExtend<(&std::string::String, &proc_macro2::Ident), std::iter::Map<std::slice::Iter<std::string::String>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2095:47: 2095:54]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), [closure@<std::vec::Vec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)> as std::vec::spec_extend::SpecExtend<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2024:14: 2024:23]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::Ident, [closure@<std::vec::Vec<proc_macro2::Ident> as std::vec::spec_extend::SpecExtend<proc_macro2::Ident, std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:178:18: 178:21]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::Literal, [closure@<std::vec::Vec<proc_macro2::Literal> as std::vec::spec_extend::SpecExtend<proc_macro2::Literal, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2101:14: 2101:25]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:412:14: 412:40]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2106:14: 2106:26]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2110:14: 2110:29]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1171:14: 1171:21]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::GenericParam, [closure@<std::vec::Vec<syn::GenericParam> as std::vec::spec_extend::SpecExtend<syn::GenericParam, std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::GenericParam, [closure@<std::vec::Vec<syn::GenericParam> as std::vec::spec_extend::SpecExtend<syn::GenericParam, std::option::IntoIter<syn::GenericParam>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::vec::Vec<syn::Lifetime> as std::vec::spec_extend::SpecExtend<syn::Lifetime, std::iter::Map<std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>, [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::vec::Vec<syn::Lifetime> as std::vec::spec_extend::SpecExtend<syn::Lifetime, std::option::IntoIter<syn::Lifetime>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Member, [closure@<std::vec::Vec<syn::Member> as std::vec::spec_extend::SpecExtend<syn::Member, std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:705:18: 705:21]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Member, [closure@<std::vec::Vec<syn::Member> as std::vec::spec_extend::SpecExtend<syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:707:52: 707:55]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::NestedMeta, [closure@<std::vec::Vec<syn::NestedMeta> as std::vec::spec_extend::SpecExtend<syn::NestedMeta, std::iter::Map<std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::NestedMeta, [closure@<std::vec::Vec<syn::NestedMeta> as std::vec::spec_extend::SpecExtend<syn::NestedMeta, std::option::IntoIter<syn::NestedMeta>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::WherePredicate, [closure@<std::vec::Vec<syn::WherePredicate> as std::vec::spec_extend::SpecExtend<syn::WherePredicate, std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::WherePredicate, [closure@<std::vec::Vec<syn::WherePredicate> as std::vec::spec_extend::SpecExtend<syn::WherePredicate, std::option::IntoIter<syn::WherePredicate>>>::spec_extend::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(&std::string::String, &proc_macro2::Ident), &&std::string::String, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2098:55: 2098:66], [closure@std::iter::Iterator::for_each::call<&&std::string::String, [closure@<std::vec::Vec<&&std::string::String> as std::vec::spec_extend::SpecExtend<&&std::string::String, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2098:55: 2098:66]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(&std::string::String, &proc_macro2::Ident), proc_macro2::Literal, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2101:14: 2101:25], [closure@std::iter::Iterator::for_each::call<proc_macro2::Literal, [closure@<std::vec::Vec<proc_macro2::Literal> as std::vec::spec_extend::SpecExtend<proc_macro2::Literal, std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2101:14: 2101:25]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), &proc_macro2::Ident, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1911:52: 1911:67], [closure@std::iter::Iterator::for_each::call<&proc_macro2::Ident, [closure@<std::vec::Vec<&proc_macro2::Ident> as std::vec::spec_extend::SpecExtend<&proc_macro2::Ident, std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1911:52: 1911:67]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, &syn::Member, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:98:37: 98:44], [closure@std::iter::Iterator::for_each::call<&syn::Member, [closure@<std::vec::Vec<&syn::Member> as std::vec::spec_extend::SpecExtend<&syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:98:37: 98:44]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, &syn::Member, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:976:46: 976:49], [closure@std::iter::Iterator::for_each::call<&syn::Member, [closure@<std::vec::Vec<&syn::Member> as std::vec::spec_extend::SpecExtend<&syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:976:46: 976:49]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, &syn::Type, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1167:55: 1167:62], [closure@std::iter::Iterator::for_each::call<&syn::Type, [closure@<std::vec::Vec<&syn::Type> as std::vec::spec_extend::SpecExtend<&syn::Type, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1167:55: 1167:62]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, proc_macro2::TokenStream, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1171:14: 1171:21], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@<std::vec::Vec<proc_macro2::TokenStream> as std::vec::spec_extend::SpecExtend<proc_macro2::TokenStream, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1171:14: 1171:21]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, syn::Member, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:707:52: 707:55], [closure@std::iter::Iterator::for_each::call<syn::Member, [closure@<std::vec::Vec<syn::Member> as std::vec::spec_extend::SpecExtend<syn::Member, std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:707:52: 707:55]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Variant, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2024:14: 2024:23], [closure@std::iter::Iterator::for_each::call<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), [closure@<std::vec::Vec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)> as std::vec::spec_extend::SpecExtend<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2024:14: 2024:23]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::GenericParam, syn::token::Comma), syn::GenericParam, (), [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::GenericParam, [closure@<std::vec::Vec<syn::GenericParam> as std::vec::spec_extend::SpecExtend<syn::GenericParam, std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::Lifetime, syn::token::Add), syn::Lifetime, (), [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::vec::Vec<syn::Lifetime> as std::vec::spec_extend::SpecExtend<syn::Lifetime, std::iter::Map<std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>, [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::NestedMeta, syn::token::Comma), syn::NestedMeta, (), [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::NestedMeta, [closure@<std::vec::Vec<syn::NestedMeta> as std::vec::spec_extend::SpecExtend<syn::NestedMeta, std::iter::Map<std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::WherePredicate, syn::token::Comma), syn::WherePredicate, (), [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::WherePredicate, [closure@<std::vec::Vec<syn::WherePredicate> as std::vec::spec_extend::SpecExtend<syn::WherePredicate, std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field), (&internals::ast::Field, proc_macro2::Ident), (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2443:14: 2443:26], [closure@std::iter::Iterator::for_each::call<(&internals::ast::Field, proc_macro2::Ident), [closure@<std::vec::Vec<(&internals::ast::Field, proc_macro2::Ident)> as std::vec::spec_extend::SpecExtend<(&internals::ast::Field, proc_macro2::Ident), std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2443:14: 2443:26]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<usize, proc_macro2::Ident, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:178:18: 178:21], [closure@std::iter::Iterator::for_each::call<proc_macro2::Ident, [closure@<std::vec::Vec<proc_macro2::Ident> as std::vec::spec_extend::SpecExtend<proc_macro2::Ident, std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:178:18: 178:21]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<usize, syn::Member, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:705:18: 705:21], [closure@std::iter::Iterator::for_each::call<syn::Member, [closure@<std::vec::Vec<syn::Member> as std::vec::spec_extend::SpecExtend<syn::Member, std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:705:18: 705:21]>>>::spec_extend::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::ptr::swap_nonoverlapping<hashbrown::raw::RawTableInner<std::alloc::Global>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::ptr::swap_nonoverlapping<u8>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::rehash_in_place::{closure#0}]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `proc_macro::TokenTree`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::vec::Vec<syn::Error>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::BTreeSet<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::collections::BTreeSet<syn::Lifetime>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(&str, internals::case::RenameRule)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<syn::Lifetime>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<syn::punctuated::Iter<syn::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2383:17: 2383:30]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2416:17: 2416:30]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1048:17: 1048:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1178:17: 1178:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1230:17: 1230:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1314:17: 1314:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1367:17: 1367:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1411:17: 1411:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:265:47: 265:54]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:133:21: 133:30]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<syn::GenericParam>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:346:52: 346:63]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2443:14: 2443:26]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2383:17: 2383:30]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2384:14: 2384:26]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2416:17: 2416:30]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2417:14: 2417:26]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Variant>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1178:17: 1178:32]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1182:14: 1182:28]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:277:14: 277:18]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2472:17: 2472:31]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2473:14: 2473:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2548:17: 2548:31]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2549:14: 2549:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, fn(usize) -> proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2598:42: 2598:57]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2106:14: 2106:26]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2110:14: 2110:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:372:36: 372:43]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::string::String>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2095:47: 2095:54]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::option::Option<(usize, &internals::ast::Field)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::vec::Vec<syn::Error>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::vec::Vec<syn::NestedMeta>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<&syn::LitStr>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<&syn::TypePath>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::GenericParam, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::Lifetime, syn::token::Add)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::NestedMeta, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::GenericParam>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::Lifetime>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::NestedMeta>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::PathSegment>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::option::Option<(usize, &internals::ast::Field)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::vec::Vec<syn::Error>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::vec::Vec<syn::NestedMeta>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::vec::Vec<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::vec::Vec<syn::Error>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::string::String, alloc::collections::btree::set_val::SetValZST)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<syn::GenericParam>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:346:52: 346:63]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:277:14: 277:18]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<(usize, &internals::ast::Field)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<syn::NestedMeta>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&syn::PathSegment, &syn::token::Colon2>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<(), std::vec::Vec<syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<&syn::LitStr>, std::option::Option<&syn::LitStr>), ()>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<internals::case::RenameRule, internals::case::ParseError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::collections::hash_map::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::vec::Vec<syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::vec::Vec<syn::WherePredicate>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::thread::local::lazy::LazyKeyInner<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<&&std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&syn::LitStr>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&syn::Member>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&syn::Type>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&syn::TypePath>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(&internals::ast::Field, proc_macro2::Ident)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(&std::string::String, &proc_macro2::Ident)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::BareFnArg, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Expr, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Field, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericParam, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Lifetime, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::LifetimeDef, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::NestedMeta, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::PathSegment, syn::token::Colon2)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Type, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::TypeParamBound, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Variant, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<internals::ast::Field>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<internals::ast::Variant>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::Literal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::vec::Vec<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::GenericParam>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Lifetime>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Member>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::NestedMeta>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::PathSegment>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::TypeParamBound>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::WherePredicate>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `syn::VisRestricted`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size type: `syn::punctuated::Pair<&syn::PathSegment, &syn::token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::punctuated::Pairs<syn::PathSegment, syn::token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<syn::Type, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<std::string::String, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<syn::WherePredicate, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:258:29: 258:36]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1231:14: 1231:28]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1315:14: 1315:28]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1368:14: 1368:28]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1656:14: 1656:23]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1999:31: 1999:38]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:145:14: 145:23]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1642:18: 1642:23]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:175:37: 175:46]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:412:14: 412:40]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&internals::ast::Field, proc_macro2::TokenStream, [closure@std::iter::adapters::filter::filter_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29], [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:276:14: 276:26], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:287:26: 287:37]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Field, (), std::ops::ControlFlow<(usize, &internals::ast::Field)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2383:17: 2383:30]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Field, (), std::ops::ControlFlow<(usize, &internals::ast::Field)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2416:17: 2416:30]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Field, (), std::ops::ControlFlow<(usize, &internals::ast::Field)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1048:17: 1048:29]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Field, (), std::ops::ControlFlow<(usize, &internals::ast::Field)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Field, (), std::ops::ControlFlow<(usize, &internals::ast::Field)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Variant, (), std::ops::ControlFlow<(usize, &internals::ast::Variant)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1178:17: 1178:32]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Variant, (), std::ops::ControlFlow<(usize, &internals::ast::Variant)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1230:17: 1230:32]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Variant, (), std::ops::ControlFlow<(usize, &internals::ast::Variant)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1314:17: 1314:32]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Variant, (), std::ops::ControlFlow<(usize, &internals::ast::Variant)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1367:17: 1367:32]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<&internals::ast::Variant, usize, std::ops::ControlFlow<usize, usize>, [closure@std::iter::adapters::filter::filter_try_fold<(usize, &internals::ast::Variant), usize, std::ops::ControlFlow<usize, usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1178:17: 1178:32], [closure@std::iter::Iterator::position::check<(usize, &internals::ast::Variant), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1191:52: 1191:66]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[internals::ast::Field]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<std::string::String>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<syn::Lifetime>]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[std::mem::MaybeUninit<syn::Lifetime>]>>::get_unchecked_mut::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::find<[closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::is_in_same_group::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::rehash_in_place::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::intrinsics::copy<std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::intrinsics::copy<std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::intrinsics::copy<std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::intrinsics::copy<std::mem::MaybeUninit<std::string::String>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::intrinsics::copy<std::mem::MaybeUninit<syn::Lifetime>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::intrinsics::copy<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_try_fold<(usize, &internals::ast::Variant), (), std::ops::ControlFlow<proc_macro2::TokenStream>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1411:17: 1411:32], [closure@std::iter::Iterator::find_map::check<(usize, &internals::ast::Variant), proc_macro2::TokenStream, &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1412:21: 1412:35]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21], [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_try_fold<&syn::TypeParam, proc_macro2::Ident, (), std::ops::ControlFlow<proc_macro2::Ident>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21], [closure@std::iter::Iterator::find::check<proc_macro2::Ident, &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const &syn::LitStr>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const &syn::TypePath>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const (syn::GenericParam, syn::token::Comma)>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const (syn::Lifetime, syn::token::Add)>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const (syn::NestedMeta, syn::token::Comma)>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const (syn::WherePredicate, syn::token::Comma)>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const std::string::String>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const syn::GenericParam>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const syn::Lifetime>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const syn::NestedMeta>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const syn::PathSegment>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::ptr::const_ptr::<impl *const syn::WherePredicate>::sub_ptr::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<&&std::string::String>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<&proc_macro2::Ident>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<&syn::Member>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<&syn::Type>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(&internals::ast::Field, proc_macro2::Ident)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(&std::string::String, &proc_macro2::Ident)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(syn::GenericArgument, syn::token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<internals::ast::Field>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<internals::ast::Variant>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<proc_macro2::Ident>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<proc_macro2::Literal>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<proc_macro2::TokenStream>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<std::string::String>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<syn::Error>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<syn::Member>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<syn::WherePredicate>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(syn::BareFnArg, syn::token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(syn::Expr, syn::token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(syn::GenericArgument, syn::token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(syn::Type, syn::token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(syn::Variant, syn::token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<(syn::WherePredicate, syn::token::Comma)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<internals::ast::Field>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<internals::ast::Variant>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<std::string::String>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::mem::MaybeUninit<syn::WherePredicate>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@syn::Attribute::parse_args_with<[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:591:46: 591:66]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::LeftOrRight<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Left`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Right`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::search::IndexResult`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `KV`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Edge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&&std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::LitStr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::Member>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::TypePath>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&internals::ast::Field, proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&std::string::String, &proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::LifetimeDef, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::NestedMeta, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::TypeParamBound, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<internals::ast::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<internals::ast::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::Literal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::vec::Vec<syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Lifetime>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Member>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::NestedMeta>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::core_arch::simd::i64x2`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size     field `.4`: 1 bytes
print-type-size     field `.5`: 1 bytes
print-type-size     field `.6`: 1 bytes
print-type-size     field `.7`: 1 bytes
print-type-size     field `.8`: 1 bytes
print-type-size     field `.9`: 1 bytes
print-type-size     field `.10`: 1 bytes
print-type-size     field `.11`: 1 bytes
print-type-size     field `.12`: 1 bytes
print-type-size     field `.13`: 1 bytes
print-type-size     field `.14`: 1 bytes
print-type-size     field `.15`: 1 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `hashbrown::raw::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::raw::sse2::Group::static_empty::AlignedBytes`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `internals::case::ParseError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.unknown`: 16 bytes
print-type-size type: `internals::symbol::Symbol`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::Expr, Item = &mut syn::Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::Field, Item = &mut syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::PathSegment, Item = &mut syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::Type, Item = &mut syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::Variant, Item = &mut syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::NestedMeta, Item = &syn::NestedMeta>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<syn::Variant, Item = &syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::buffer::Cursor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Ref<std::option::Option<std::vec::Vec<syn::Error>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefMut<std::option::Option<std::vec::Vec<syn::Error>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::buffer::Cursor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<syn::punctuated::Iter<syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2449:17: 2449:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2472:17: 2472:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2548:17: 2548:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2562:17: 2562:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:641:17: 641:24]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1095:17: 1095:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:334:17: 334:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:373:17: 373:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:890:17: 890:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:964:17: 964:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1655:17: 1655:26]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2449:17: 2449:31]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2450:14: 2450:29]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2562:17: 2562:31]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2563:14: 2563:29]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2916:54: 2916:57]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:178:18: 178:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1205:51: 1205:54]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:465:26: 465:29]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:705:18: 705:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2098:55: 2098:66]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2101:14: 2101:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1194:61: 1194:75]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1911:52: 1911:67]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2033:41: 2033:55]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2394:57: 2394:71]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2891:47: 2891:54]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2912:51: 2912:58]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2931:53: 2931:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:697:39: 697:42]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:136:57: 136:64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:183:57: 183:64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:83:37: 83:44]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:98:37: 98:44]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1167:55: 1167:62]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1171:14: 1171:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:471:57: 471:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:694:47: 694:50]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:707:52: 707:55]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:975:47: 975:50]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:976:46: 976:49]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:641:17: 641:24]>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2024:14: 2024:23]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<syn::Error>, for<'r> fn(&'r syn::Error) -> proc_macro2::TokenStream {syn::Error::to_compile_error}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<syn::GenericParam>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:19:18: 19:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<syn::GenericParam>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:383:34: 383:41]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[syn::Member]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[syn::PathSegment]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[syn::TypeParamBound]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::option::Option<&internals::ast::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::option::Option<&internals::ast::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<&[syn::WherePredicate], std::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<&[syn::WherePredicate]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &internals::ast::Field), std::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &internals::ast::Field)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &internals::ast::Variant), std::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &internals::ast::Variant)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<&[syn::WherePredicate], std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(usize, &internals::ast::Field), std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(usize, &internals::ast::Variant), std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, std::option::Option<&syn::LitStr>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &internals::ast::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::NestedMeta>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[syn::WherePredicate]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&syn::Lifetime, &alloc::collections::btree::set_val::SetValZST)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(&str, internals::case::RenameRule))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &internals::ast::Field)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &internals::ast::Variant)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::Field)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::Lifetime)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::WherePredicate)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<&internals::ast::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::slice::Iter<internals::ast::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::iter::Iterator<Item = &internals::ast::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::Expr, Item = &mut syn::Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::Field, Item = &mut syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::PathSegment, Item = &mut syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::Type, Item = &mut syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::Variant, Item = &mut syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::NestedMeta, Item = &syn::NestedMeta>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<syn::Variant, Item = &syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::iter::Iterator<Item = &internals::ast::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::Expr, Item = &mut syn::Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::Field, Item = &mut syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::PathSegment, Item = &mut syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::Type, Item = &mut syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::Variant, Item = &mut syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::NestedMeta, Item = &syn::NestedMeta>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<syn::Variant, Item = &syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&&std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&syn::LitStr]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&syn::TypePath]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&syn::Type]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(&internals::ast::Field, proc_macro2::Ident)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(&std::string::String, &proc_macro2::Ident)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::BareFnArg, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Expr, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::GenericArgument, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::GenericParam, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Lifetime, syn::token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::NestedMeta, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Type, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Variant, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::WherePredicate, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[internals::ast::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[internals::ast::Variant]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro2::Literal]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro2::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<std::string::String>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<syn::Lifetime>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<syn::WherePredicate>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::vec::Vec<syn::WherePredicate>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::Error]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::GenericParam]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::Lifetime]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::NestedMeta]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::WherePredicate]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&&std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&syn::LitStr]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&syn::TypePath]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&syn::Type]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(&internals::ast::Field, proc_macro2::Ident)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(&std::string::String, &proc_macro2::Ident)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::BareFnArg, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Expr, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::GenericArgument, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::GenericParam, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Lifetime, syn::token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::NestedMeta, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Type, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Variant, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::WherePredicate, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[internals::ast::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[internals::ast::Variant]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro2::Literal]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro2::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<std::string::String>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<syn::Lifetime>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<syn::WherePredicate>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::vec::Vec<syn::WherePredicate>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::Error]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::GenericParam]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::Lifetime]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::NestedMeta]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::WherePredicate]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&internals::ast::Field, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::BareFnArg, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::Expr, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::GenericArgument, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::Type, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::TypeParamBound, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::Variant, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::WherePredicate, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::BareFnArg, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::GenericArgument, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::NestedMeta, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::Type, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::Variant, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::Ref<std::option::Option<std::vec::Vec<syn::Error>>>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<std::option::Option<std::vec::Vec<syn::Error>>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<&syn::LitStr>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u64, std::num::TryFromIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<&&std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<&proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<&syn::Member>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<&syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(&internals::ast::Field, proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(&std::string::String, &proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(&str, internals::case::RenameRule)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(syn::NestedMeta, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(syn::PathSegment, syn::token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<internals::ast::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<internals::ast::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<proc_macro2::Literal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<proc_macro2::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<syn::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<syn::Lifetime>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<syn::Member>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(syn::TypeParamBound, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<internals::ast::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<internals::ast::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `syn::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `syn::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeParen`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeSlice`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Cursor`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size type: `syn::buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::generics::Lifetimes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `syn::generics::TypeParams`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `syn::parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Chain`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::punctuated::Iter<syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<syn::NestedMeta>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::thread::ThreadBound<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread_id`: 8 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<syn::token::Colon2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::token::Dot3`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<std::string::String, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<syn::Lifetime, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<&syn::LitStr, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<&syn::TypePath, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<(syn::GenericParam, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<(syn::Lifetime, syn::token::Add), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<(syn::NestedMeta, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<(syn::WherePredicate, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<std::string::String, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<syn::GenericParam, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<syn::Lifetime, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<syn::NestedMeta, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<syn::PathSegment, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<syn::WherePredicate, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:265:47: 265:54]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:282:14: 282:26]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:346:52: 346:63]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1755:53: 1755:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1802:53: 1802:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2095:47: 2095:54]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2106:14: 2106:26]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2110:14: 2110:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2473:14: 2473:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2549:14: 2549:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2598:42: 2598:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:372:36: 372:43]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/fragment.rs:33:55: 33:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/fragment.rs:61:55: 61:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:175:48: 175:50]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:591:46: 591:66]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:133:21: 133:30]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1067:22: 1067:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1110:22: 1110:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:276:14: 276:26]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:340:14: 340:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:382:18: 382:25]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>>::{closure#0}]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::collections::btree_set::Iter<syn::Lifetime>>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::option::Iter<syn::Lifetime>>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>, std::option::IntoIter<syn::NestedMeta>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:277:14: 277:18]>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::option::IntoIter<syn::GenericParam>, std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<syn::GenericParam>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:346:52: 346:63]>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::option::IntoIter<syn::GenericParam>, syn::punctuated::IntoIter<syn::GenericParam>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&internals::ast::Field, proc_macro2::TokenStream, [closure@std::iter::adapters::filter::filter_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29], [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:819:14: 819:26], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:826:26: 826:37]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::string::String as core::slice::cmp::SliceContains>::slice_contains::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::slice::memchr::memchr::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::str::iter::MatchIndicesInternal<char>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::map::make_hasher<proc_macro2::Ident, proc_macro2::Ident, (), std::collections::hash_map::RandomState>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::reserve_rehash<[closure@hashbrown::map::make_hasher<proc_macro2::Ident, proc_macro2::Ident, (), std::collections::hash_map::RandomState>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::fallible_with_capacity::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::KEYS::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<&syn::LitStr>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<&syn::TypePath>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(syn::GenericParam, syn::token::Comma)>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(syn::Lifetime, syn::token::Add)>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(syn::NestedMeta, syn::token::Comma)>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(syn::WherePredicate, syn::token::Comma)>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<std::string::String>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<syn::GenericParam>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<syn::Lifetime>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<syn::NestedMeta>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<syn::PathSegment>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<syn::WherePredicate>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<u8>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2383:17: 2383:30]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2416:17: 2416:30]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1048:17: 1048:29]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1178:17: 1178:32]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1230:17: 1230:32]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1314:17: 1314:32]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant), &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1367:17: 1367:32]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<proc_macro2::Ident, &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find_map::check<&internals::ast::Field, &[syn::WherePredicate], &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find_map::check<(usize, &internals::ast::Variant), proc_macro2::TokenStream, &mut [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1412:21: 1412:35]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::collections::btree_set::Iter<syn::Lifetime>>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::option::Iter<syn::Lifetime>>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:334:17: 334:25]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:373:17: 373:25]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:890:17: 890:25]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:964:17: 964:25]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<&internals::ast::Field, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:334:17: 334:25], [closure@std::iter::adapters::map::map_fold<&internals::ast::Field, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:340:14: 340:21], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:349:13: 349:24]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<&internals::ast::Field, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:373:17: 373:25], [closure@std::iter::adapters::map::map_fold<&internals::ast::Field, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:382:18: 382:25], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:391:17: 391:28]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29], [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:276:14: 276:26], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:287:26: 287:37]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_try_fold<(usize, &internals::ast::Variant), usize, std::ops::ControlFlow<usize, usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1178:17: 1178:32], [closure@std::iter::Iterator::position::check<(usize, &internals::ast::Variant), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1191:52: 1191:66]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:340:14: 340:21], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:349:13: 349:24]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:382:18: 382:25], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:391:17: 391:28]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&syn::Lifetime, syn::Lifetime, (), for<'r> fn(&'r syn::Lifetime) -> syn::Lifetime {<syn::Lifetime as std::clone::Clone>::clone}, [closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::collections::btree_set::Iter<syn::Lifetime>>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&syn::Lifetime, syn::Lifetime, (), for<'r> fn(&'r syn::Lifetime) -> syn::Lifetime {<syn::Lifetime as std::clone::Clone>::clone}, [closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::option::Iter<syn::Lifetime>>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&syn::TypeParam, proc_macro2::Ident, (), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21], [closure@std::iter::adapters::map::map_fold<proc_macro2::Ident, (proc_macro2::Ident, ()), (), [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:276:14: 276:26], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:287:26: 287:37]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::Ident, (proc_macro2::Ident, ()), (), [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `de::DeImplGenerics`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::DeTypeGenerics`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `internals::receiver::ReplaceReceiver`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecMut<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::RefMutL<proc_macro::bridge::client::BridgeStateL>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::Member; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::PathSegment; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::iter::FlatMap<std::slice::Iter<internals::ast::Variant>, std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::slice::Iter<internals::ast::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::BorrowRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::option::Iter<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.it`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::RangeFrom<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:137:51: 137:54]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::RangeFrom<usize>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:84:39: 84:42]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::iter::Map<std::option::Iter<syn::Lifetime>, for<'r> fn(&'r syn::Lifetime) -> syn::Lifetime {<syn::Lifetime as std::clone::Clone>::clone}>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::mem::MaybeUninit<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::mem::MaybeUninit<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(&str, internals::case::RenameRule)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &internals::ast::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<syn::GenericParam>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:346:52: 346:63]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:277:14: 277:18]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::option::IntoIter<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::option::IntoIter<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::slice::Iter<internals::ast::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::IntoIter<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::IntoIter<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut syn::punctuated::IntoIter<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, &syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Iter<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Option<&&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&internals::ast::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&syn::token::Colon2>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&internals::ast::Field, proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&std::string::String, &proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&str, internals::case::RenameRule)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(usize, &internals::ast::Field)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::set_val::SetValZST>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&internals::ast::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&internals::ast::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&internals::attr::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut internals::ast::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut internals::ast::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut proc_macro::bridge::client::BridgeState>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<syn::GenericParam>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:346:52: 346:63]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:276:17: 276:21]>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:277:14: 277:18]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field>>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:52:21: 52:28]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::FilterMap<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:74:21: 74:30]>, for<'r> fn(&'r [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<internals::ast::Variant>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1178:23: 1178:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:315:23: 315:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<syn::Attribute>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:877:23: 877:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::IntoIter<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::IntoIter<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<&internals::ast::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<(usize, &internals::ast::Field)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::slice::Iter<internals::ast::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::IntoIter<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::IntoIter<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<syn::Error>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::punctuated::IntoIter<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::slice::Iter<internals::ast::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::ExprPath>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Meta>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(proc_macro2::Ident, ())>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Paren>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&internals::ast::Field, proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&std::string::String, &proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, internals::case::RenameRule)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::Member; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::PathSegment; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<internals::ast::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<internals::ast::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::iter::FlatMap<std::slice::Iter<internals::ast::Variant>, std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::option::Option<std::vec::Vec<syn::Error>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::slice::Iter<internals::ast::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(&internals::ast::Field, proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(&std::string::String, &proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::Member; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::PathSegment; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<internals::ast::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<internals::ast::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::iter::FlatMap<std::slice::Iter<internals::ast::Variant>, std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::slice::Iter<internals::ast::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::vec::Vec<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&syn::LitStr, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `syn::ImplGenerics`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::MacroDelimiter`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Brace`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Bracket`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::TraitBoundModifier`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Maybe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Turbofish`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::TypeGenerics`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::token::AddEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Colon2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::DivEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::MulEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RemEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::SubEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `syn::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `syn::VisCrate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.crate_token`: 4 bytes
print-type-size type: `syn::VisPublic`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size type: `syn::token::Add`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bang`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Brace`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bracket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Crate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Div`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Paren`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Rem`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Sub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `internals::attr::RenameAllRules`: 2 bytes, alignment: 1 bytes
print-type-size     field `.serialize`: 1 bytes
print-type-size     field `.deserialize`: 1 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `de::Untagged`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Yes`: 0 bytes
print-type-size     variant `No`: 0 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `internals::Derive`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Serialize`: 0 bytes
print-type-size     variant `Deserialize`: 0 bytes
print-type-size type: `internals::ast::Style`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size     variant `Newtype`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `internals::attr::Identifier`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `No`: 0 bytes
print-type-size     variant `Field`: 0 bytes
print-type-size     variant `Variant`: 0 bytes
print-type-size type: `internals::case::RenameRule`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `LowerCase`: 0 bytes
print-type-size     variant `UpperCase`: 0 bytes
print-type-size     variant `PascalCase`: 0 bytes
print-type-size     variant `CamelCase`: 0 bytes
print-type-size     variant `SnakeCase`: 0 bytes
print-type-size     variant `ScreamingSnakeCase`: 0 bytes
print-type-size     variant `KebabCase`: 0 bytes
print-type-size     variant `ScreamingKebabCase`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ser::StructTrait`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SerializeMap`: 0 bytes
print-type-size     variant `SerializeStruct`: 0 bytes
print-type-size     variant `SerializeStructVariant`: 0 bytes
print-type-size type: `ser::TupleTrait`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SerializeTuple`: 0 bytes
print-type-size     variant `SerializeTupleStruct`: 0 bytes
print-type-size     variant `SerializeTupleVariant`: 0 bytes
print-type-size type: `std::cell::Cell<std::thread::local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::thread::local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::mem::MaybeUninit<u8>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::thread::local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::mem::MaybeUninit<u8>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::thread::local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::set_val::SetValZST>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<internals::case::RenameRule>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::thread::AccessError>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, proc_macro2::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::thread::local::fast::DtorState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unregistered`: 0 bytes
print-type-size     variant `Registered`: 0 bytes
print-type-size     variant `RunningOrHasRun`: 0 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:19:18: 19:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:275:14: 275:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:277:14: 277:18]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:383:34: 383:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1178:17: 1178:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1182:14: 1182:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1191:52: 1191:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1194:61: 1194:75]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1230:17: 1230:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1245:14: 1245:23]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1314:17: 1314:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1367:17: 1367:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1411:17: 1411:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1655:17: 1655:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1911:52: 1911:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2024:14: 2024:23]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2033:41: 2033:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2098:55: 2098:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2101:14: 2101:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:213:33: 213:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2383:17: 2383:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2384:14: 2384:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2394:57: 2394:71]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2416:17: 2416:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2417:14: 2417:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2443:14: 2443:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2449:17: 2449:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2450:14: 2450:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2472:17: 2472:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2526:41: 2526:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2548:17: 2548:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2562:17: 2562:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2563:14: 2563:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:272:29: 272:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2891:47: 2891:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2912:51: 2912:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2916:54: 2916:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:2931:53: 2931:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:362:48: 362:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:504:41: 504:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:641:17: 641:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:697:39: 697:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:971:41: 971:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:134:31: 134:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1078:37: 1078:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1082:36: 1082:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1172:23: 1172:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1173:18: 1173:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1470:37: 1470:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1474:36: 1474:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:1641:14: 1641:18]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:647:37: 647:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:651:36: 651:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/attr.rs:696:26: 696:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:136:57: 136:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:137:51: 137:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:178:18: 178:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:183:57: 183:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:83:37: 83:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:84:39: 84:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/pretend.rs:98:37: 98:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1048:17: 1048:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1095:17: 1095:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1167:55: 1167:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1171:14: 1171:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:1205:51: 1205:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:164:33: 164:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:198:48: 198:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:270:17: 270:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:287:26: 287:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:334:17: 334:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:349:13: 349:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:373:17: 373:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:391:17: 391:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:465:26: 465:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:471:57: 471:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:694:47: 694:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:705:18: 705:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:707:52: 707:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:819:14: 819:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:826:26: 826:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:875:26: 875:33]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:890:17: 890:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:896:14: 896:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:904:26: 904:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:964:17: 964:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:975:47: 975:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:976:46: 976:49]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/bound.rs:244:14: 244:21]>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::collections::btree_map::IntoIter<std::string::String, alloc::collections::btree::set_val::SetValZST> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::collections::btree_map::Keys<syn::Lifetime, alloc::collections::btree::set_val::SetValZST> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::collections::btree_set::IntoIter<std::string::String> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:641:17: 641:24]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:641:17: 641:24]>::{closure#0}]>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, [closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, [closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::next_unchecked::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&internals::ast::Field, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:134:31: 134:34]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&syn::Lifetime, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:272:29: 272:32]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::position::check<(usize, &internals::ast::Variant), [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:1191:52: 1191:66]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<&internals::ast::Field, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:890:17: 890:25], [closure@std::iter::adapters::map::map_fold<&internals::ast::Field, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:896:14: 896:21], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:904:26: 904:37]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:813:17: 813:29], [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:819:14: 819:26], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:826:26: 826:37]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:896:14: 896:21], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:904:26: 904:37]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field, usize, usize, [closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:641:17: 641:24]>::{closure#0}], [closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<internals::ast::Field>, [closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/de.rs:641:17: 641:24]>::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:819:14: 819:26], [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/ser.rs:826:26: 826:37]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, &str>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, &str>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, internals::case::ParseError>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, internals::case::ParseError>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, std::string::String>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, std::string::String>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, syn::Error>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, syn::Error>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::set_val::SetValZST`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::bridge::closure::Env`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&syn::Member>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&internals::ast::Field, proc_macro2::Ident)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&std::string::String, &proc_macro2::Ident)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, internals::case::RenameRule)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::NestedMeta, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::PathSegment, syn::token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&internals::ast::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&internals::ast::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (std::string::String, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Lifetime, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::TypeParamBound, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut internals::ast::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut internals::ast::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::option::Option<std::vec::Vec<syn::Error>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Literal>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::LitStr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Member>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::TypePath>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&internals::ast::Field, proc_macro2::Ident)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&std::string::String, &proc_macro2::Ident)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(proc_macro2::Ident, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Lifetime, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::LifetimeDef, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::NestedMeta, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::PathSegment, syn::token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::TypeParamBound, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::Member; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::Member]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::PathSegment; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::PathSegment]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::TypeParamBound; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::TypeParamBound]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::error::ErrorMessage; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::error::ErrorMessage]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::iter::Iterator<Item = &internals::ast::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::Expr, Item = &mut syn::Expr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::Field, Item = &mut syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::GenericParam, Item = &mut syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::PathSegment, Item = &mut syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::Type, Item = &mut syn::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::Variant, Item = &mut syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::BareFnArg, Item = &syn::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::Field, Item = &syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::GenericArgument, Item = &syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::GenericParam, Item = &syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::NestedMeta, Item = &syn::NestedMeta>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::PathSegment, Item = &syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::Type, Item = &syn::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<syn::Variant, Item = &syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<internals::ast::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<internals::ast::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Literal>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::string::String, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(syn::Lifetime, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::iter::FlatMap<std::slice::Iter<internals::ast::Variant>, std::slice::Iter<internals::ast::Field>, [closure@/var/home/diogo464/.local/share/cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.142/src/internals/ast.rs:127:51: 127:60]>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::slice::Iter<internals::ast::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<syn::WherePredicate>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::LifetimeDef>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Member>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::NestedMeta>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::buffer::Cursor>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<syn::BareFnArg, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<syn::GenericArgument, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<syn::NestedMeta, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<syn::Type, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<syn::Variant, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<syn::BareFnArg, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<syn::Expr, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<syn::GenericArgument, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<syn::Type, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<syn::TypeParamBound, syn::token::Add>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<syn::Variant, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<syn::WherePredicate, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<()>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, ()>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::ExprArray`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAssign`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAssignOp`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAsync`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAwait`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBox`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBreak`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprClosure`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprContinue`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprForLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprGroup`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprIf`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprLet`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprMacro`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprMatch`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprMethodCall`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRange`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprReference`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRepeat`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprReturn`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprStruct`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTry`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTryBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTuple`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprType`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprUnsafe`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprWhile`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprYield`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::ser::content::Content`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TupleVariant`: 63 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size         field `.3`: 24 bytes
print-type-size     variant `StructVariant`: 63 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size         field `.3`: 24 bytes
print-type-size     variant `NewtypeVariant`: 47 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size         field `.3`: 8 bytes
print-type-size     variant `TupleStruct`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `Struct`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `UnitVariant`: 39 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NewtypeStruct`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Seq`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Map`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnitStruct`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `I32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `F32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `U16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `I16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `U8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<(__private::de::content::Content, __private::de::content::Content)>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<__private::ser::content::Content>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<(__private::de::content::Content, __private::de::content::Content)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<__private::ser::content::Content>>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::option::Option<(__private::de::content::Content, __private::de::content::Content)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<__private::ser::content::Content>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::path::PathBuf, std::string::FromUtf8Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::ffi::CString, std::ffi::NulError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::FromUtf8Error`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 16 bytes
print-type-size type: `__private::de::content::Content`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `ByteBuf`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Seq`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Map`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Str`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Newtype`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `I32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `F32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `U16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `I16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `U8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `__private::de::content::InternallyTaggedUnitVisitor`: 32 bytes, alignment: 8 bytes
print-type-size     field `.type_name`: 16 bytes
print-type-size     field `.variant_name`: 16 bytes
print-type-size type: `__private::de::content::TagContentOtherFieldVisitor`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tag`: 16 bytes
print-type-size     field `.content`: 16 bytes
print-type-size type: `__private::de::content::TagOrContent`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Content`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size type: `__private::de::content::TagOrContentFieldVisitor`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tag`: 16 bytes
print-type-size     field `.content`: 16 bytes
print-type-size type: `__private::de::content::UntaggedUnitVisitor`: 32 bytes, alignment: 8 bytes
print-type-size     field `.type_name`: 16 bytes
print-type-size     field `.variant_name`: 16 bytes
print-type-size type: `std::borrow::Cow<[u8]>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ffi::NulError`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<__private::de::content::Content>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<__private::de::content::Content>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<__private::de::content::Content>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<__private::de::content::Content>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `V6`: 30 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 28 bytes, alignment: 4 bytes
print-type-size     variant `V4`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size type: `std::option::Option<__private::de::content::Content>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<__private::de::content::TagOrContent>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::path::PathBuf, std::str::Utf8Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::vec::IntoIter<(__private::de::content::Content, __private::de::content::Content)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<__private::de::content::Content>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.flowinfo`: 4 bytes
print-type-size     field `.scope_id`: 4 bytes
print-type-size     field `.port`: 2 bytes
print-type-size     field `.ip`: 16 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::ops::Range<usize> as std::slice::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<u8>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `de::Unexpected`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Str`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Unsigned`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Signed`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size     variant `Option`: 0 bytes
print-type-size     variant `NewtypeStruct`: 0 bytes
print-type-size     variant `Seq`: 0 bytes
print-type-size     variant `Map`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size     variant `UnitVariant`: 0 bytes
print-type-size     variant `NewtypeVariant`: 0 bytes
print-type-size     variant `TupleVariant`: 0 bytes
print-type-size     variant `StructVariant`: 0 bytes
print-type-size type: `de::format::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(__private::de::content::Content, __private::de::content::Content)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<__private::de::content::Content>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::time::SystemTime>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&std::path::Path, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::time::Duration, std::time::SystemTimeError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(&str, __private::ser::content::Content)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(__private::de::content::Content, __private::de::content::Content)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(__private::ser::content::Content, __private::ser::content::Content)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<__private::de::content::Content>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<__private::ser::content::Content>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::net::IpAddr`: 17 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<(__private::de::content::Content, __private::de::content::Content)>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<__private::de::content::Content>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts_mut<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `__private::de::Borrowed<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `__private::de::Borrowed<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `__private::de::content::TagOrContentVisitor`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 0 bytes
print-type-size     field `.name`: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&str, __private::ser::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(__private::de::content::Content, __private::de::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(__private::ser::content::Content, __private::ser::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<__private::de::content::Content>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<__private::ser::content::Content>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `de::OneOf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.names`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::IpAddr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::Ipv4Addr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::Ipv6Addr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::SocketAddr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::SocketAddrV4>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::SocketAddrV6>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::utf8::Encode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.buf`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `de::value::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.err`: 16 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 1 bytes
print-type-size     field `.octets`: 16 bytes
print-type-size type: `std::num::NonZeroI128`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::num::NonZeroU128`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI128>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU128>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(__private::de::content::Content, __private::de::content::Content)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[__private::de::content::Content]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::option::Option<(__private::de::content::Content, __private::de::content::Content)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(__private::de::content::Content, __private::de::content::Content)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[__private::de::content::Content]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::option::Option<(__private::de::content::Content, __private::de::content::Content)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(&str, __private::ser::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(__private::de::content::Content, __private::de::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<(__private::ser::content::Content, __private::ser::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<__private::de::content::Content>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<__private::ser::content::Content>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::IterMut<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sys::unix::time::SystemTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::sys::unix::time::Timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::time::SystemTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::time::SystemTimeError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<(__private::de::content::Content, __private::de::content::Content)>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<__private::de::content::Content>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `de::impls::StringInPlaceVisitor`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::value::ExpectedInMap`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::value::ExpectedInSeq`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<__private::de::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<__private::de::content::Content>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::BorrowRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&__private::de::content::Content>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&__private::de::content::Content>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroI64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroIsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&str, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(__private::de::content::Content, __private::de::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(__private::ser::content::Content, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&__private::de::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::fmt::Arguments>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroIsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(__private::de::content::Content, __private::de::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(__private::ser::content::Content, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<__private::de::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<__private::de::content::Content>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(&str, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(__private::de::content::Content, __private::de::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(__private::ser::content::Content, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<__private::de::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<__private::de::content::Content>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::sync::atomic::AtomicI64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicIsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::unix::locks::futex_rwlock::RwLock`: 8 bytes, alignment: 4 bytes
print-type-size     field `.state`: 4 bytes
print-type-size     field `.writer_notify`: 4 bytes
print-type-size type: `std::sys_common::rwlock::MovableRwLock`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::net::SocketAddrV4`: 6 bytes, alignment: 2 bytes
print-type-size     field `.port`: 2 bytes
print-type-size     field `.ip`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 1 bytes
print-type-size     field `.octets`: 4 bytes
print-type-size type: `std::num::NonZeroI32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicI32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sys::unix::locks::futex_mutex::Mutex`: 4 bytes, alignment: 4 bytes
print-type-size     field `.futex`: 4 bytes
print-type-size type: `std::sys_common::mutex::MovableMutex`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::cell::UnsafeCell<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::cell::UnsafeCell<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::num::NonZeroI16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::num::NonZeroU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicI16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `std::sync::atomic::AtomicU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `__private::de::content::TagContentOtherField`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size     variant `Content`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size type: `__private::de::content::TagOrContentField`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size     variant `Content`: 0 bytes
print-type-size type: `__private::ser::Unsupported`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Boolean`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `String`: 0 bytes
print-type-size     variant `ByteArray`: 0 bytes
print-type-size     variant `Optional`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size     variant `UnitStruct`: 0 bytes
print-type-size     variant `Sequence`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size     variant `TupleStruct`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::collections::Bound<T>>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size     variant `Included`: 0 bytes
print-type-size     variant `Excluded`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::IpAddrKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V4`: 0 bytes
print-type-size     variant `V6`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::SocketAddrKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V4`: 0 bytes
print-type-size     variant `V6`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::result::Result<T, E>>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Secs`: 0 bytes
print-type-size     variant `Nanos`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Secs`: 0 bytes
print-type-size     variant `Nanos`: 0 bytes
print-type-size type: `de::impls::OsStringKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unix`: 0 bytes
print-type-size     variant `Windows`: 0 bytes
print-type-size type: `de::impls::range::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Start`: 0 bytes
print-type-size     variant `End`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::NonZeroI8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::num::NonZeroU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(de::ignored_any::IgnoredAny, de::ignored_any::IgnoredAny)>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<de::ignored_any::IgnoredAny>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::Field>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::Field>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<de::impls::range::Field>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicI8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::sync::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `std::sync::poison::Guard`: 1 bytes, alignment: 1 bytes
print-type-size     field `.panicking`: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::collections::Bound<T>>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::IpAddrKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::SocketAddrKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::result::Result<T, E>>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::OsStringKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::range::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::borrow_cow_bytes::CowBytesVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::borrow_cow_str::CowStrVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::content::ContentVisitor`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `__private::doc::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `actually_private::T`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::ignored_any::IgnoredAny`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for (T0, T1)>::deserialize::TupleVisitor<std::net::Ipv4Addr, u16>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for (T0, T1)>::deserialize::TupleVisitor<std::net::Ipv6Addr, u16>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for f32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for f64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i128>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i16>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i8>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for isize>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::EnumVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::EnumVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI128>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI16>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI32>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI64>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI8>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroIsize>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU128>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU16>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU32>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU64>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU8>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroUsize>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::DurationVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::DurationVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u128>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u16>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u8>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for usize>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::BoolVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::BytesVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::CStringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::CharVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::OsStringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::PathBufVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::PathVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::StrVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::StringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::UnitVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `ser::impossible::Impossible<(), std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.void`: 0 bytes
print-type-size     field `.ok`: 0 bytes
print-type-size     field `.error`: 0 bytes
print-type-size type: `ser::impossible::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, __private::ser::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(__private::de::content::Content, __private::de::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(__private::ser::content::Content, __private::ser::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&__private::de::content::Content>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&__private::ser::content::Content>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, __private::ser::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(__private::de::content::Content, __private::de::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(__private::ser::content::Content, __private::ser::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::net::Ipv4Addr, u16)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::net::Ipv6Addr, u16)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::de::content::Content>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::de::content::TagOrContent>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::ser::content::Content>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CStr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<__private::de::content::Content>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::IpAddr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::Ipv4Addr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::Ipv6Addr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddrV4>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddrV6>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<(__private::de::content::Content, __private::de::content::Content)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<ser::impossible::Impossible<(), std::fmt::Error>, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `item::Item`: 104 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 88 bytes
print-type-size     field `.unparsed`: 8 bytes
print-type-size     field `.span`: 8 bytes
print-type-size type: `item::ItemKind`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Parameter`: 84 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Return`: 84 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Field`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Class`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Name`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Libtbl`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Server`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Client`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Shared`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Unknown`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Header`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Description`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SourceCode`: 0 bytes
print-type-size type: `item::KV<item::Parameter>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size     field `.key`: 20 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Formatter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<item::Parameter, item::ParameterParseError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `item::Parameter`: 56 bytes, alignment: 8 bytes
print-type-size     field `.type_union`: 40 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.description`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::result::Result<item::Return, item::TypeUnionParseError>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::Return`: 48 bytes, alignment: 8 bytes
print-type-size     field `.type_union`: 40 bytes
print-type-size     field `.description`: 8 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, item::ParameterParseError>, item::TypeUnion>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, item::TypeUnionParseError>, item::TypeUnion>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::TypeUnion, item::ParameterParseError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<item::TypeUnion, item::TypeUnionParseError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::TypeUnion`: 40 bytes, alignment: 8 bytes
print-type-size     field `.types`: 24 bytes
print-type-size     field `.span`: 8 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, item::ParameterParseError>, item::Ident>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<item::Ident, item::ParameterParseError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `item::KV<item::Field>`: 36 bytes, alignment: 4 bytes
print-type-size     field `.key`: 20 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `item::KV<item::Class>`: 32 bytes, alignment: 4 bytes
print-type-size     field `.key`: 20 bytes
print-type-size     field `.value`: 12 bytes
print-type-size type: `item::ParameterParseError`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NameParseError`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TypeUnionParseError`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `source::SourceReader`: 32 bytes, alignment: 8 bytes
print-type-size     field `.source`: 16 bytes
print-type-size     field `.remaining`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, item::IdentParseError>, item::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, item::KeyParseError>, item::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, item::TypeUnionParseError>, item::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<item::Class, item::IdentParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<item::Field, item::IdentParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<item::Ident, item::IdentParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<item::Ident, item::KeyParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<item::Ident, item::TypeUnionParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<item::Key, item::KeyParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, item::ParameterParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `item::KV<item::Ident>`: 28 bytes, alignment: 4 bytes
print-type-size     field `.key`: 20 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `[closure@std::intrinsics::copy_nonoverlapping<u8>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `item::IdentParseError`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `item::KeyParseError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidIdent`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `MissingAtSymbol`: 0 bytes
print-type-size type: `item::TypeUnionParseError`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, item::IdentParseError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, item::KeyParseError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, item::TypeUnionParseError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<item::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `item::KV<()>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.value`: 0 bytes
print-type-size     field `.key`: 20 bytes
print-type-size type: `item::Key`: 20 bytes, alignment: 4 bytes
print-type-size     field `.ident`: 8 bytes
print-type-size     field `.span`: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@<usize as std::slice::SliceIndex<[u8]>>::get_unchecked::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<item::Ident>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::slice::from_raw_parts<u8>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<item::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `item::Field`: 16 bytes, alignment: 4 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.description`: 8 bytes
print-type-size type: `source::Source`: 16 bytes, alignment: 8 bytes
print-type-size     field `.source`: 16 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[item::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[item::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<item::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `item::Class`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ident`: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::intrinsics::write_bytes<u8>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::mem::valid_align::ValidAlign::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::num::NonZeroUsize::new_unchecked::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `item::Description`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 8 bytes
print-type-size type: `item::Ident`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 8 bytes
print-type-size type: `item::Unparsed`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 8 bytes
print-type-size type: `source::Location`: 8 bytes, alignment: 4 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.column`: 4 bytes
print-type-size type: `source::Span`: 8 bytes, alignment: 4 bytes
print-type-size     field `.begin`: 4 bytes
print-type-size     field `.length`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlign`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::valid_align::ValidAlignEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&item::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<item::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<item::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<item::Description, !>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<item::Unparsed, !>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `source::Position`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `item::ClassKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Hook`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Table`: 0 bytes
print-type-size     variant `Field`: 0 bytes
print-type-size     variant `Library`: 0 bytes
print-type-size     variant `Function`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `item::KeyKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Name`: 0 bytes
print-type-size     variant `Class`: 0 bytes
print-type-size     variant `Libtbl`: 0 bytes
print-type-size     variant `Server`: 0 bytes
print-type-size     variant `Client`: 0 bytes
print-type-size     variant `Shared`: 0 bytes
print-type-size     variant `Field`: 0 bytes
print-type-size     variant `Param`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@<std::str::Chars as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@sfdoc/src/item.rs:345:26: 345:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@sfdoc/src/source.rs:167:46: 167:49]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@sfdoc/src/source.rs:191:33: 191:36]`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&item::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<item::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::LayoutError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
